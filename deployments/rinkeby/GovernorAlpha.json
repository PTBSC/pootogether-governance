{
  "address": "0x590391fd4BF52c3e32D2d5D68F2f7eB23af19c91",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hermes_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "defiSaver__",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "defiSaver_",
      "outputs": [
        {
          "internalType": "contract GovernanceTokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorAlpha.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        }
      ],
      "name": "setTimelock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorAlpha.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x0e2b6baa76bcceb5b1e78b37eabcc8afb5c719445d721d9f7b9d2f189458ca32",
  "receipt": {
    "to": null,
    "from": "0x74943bc524A690aacF53882e5eE81De0771F7B0D",
    "contractAddress": "0x590391fd4BF52c3e32D2d5D68F2f7eB23af19c91",
    "transactionIndex": 6,
    "gasUsed": "2889343",
    "logsBloom": "0x
    "blockHash": "0xbd5b5579b8686f8059c7778bc15cf803ac14890e7378f56ad8373a1f72729ef4",
    "transactionHash": "0x0e2b6baa76bcceb5b1e78b37eabcc8afb5c719445d721d9f7b9d2f189458ca32",
    "logs": [],
    "blockNumber": 7897503,
    "cumulativeGasUsed": "3832666",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x74943bc524A690aacF53882e5eE81De0771F7B0D",
    "0x1655A3220A9A9eE90bf89015C240b5f4E61595C7"
  ],
  "solcInputHash": "e46bb648274d118db5b41040358c2d98",
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hermes_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defiSaver__\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defiSaver_\",\"outputs\":[{\"internalType\":\"contract GovernanceTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorAlpha.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"}],\"name\":\"setTimelock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorAlpha.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/test/GovernorZero.sol\":\"GovernorZero\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernorAlpha.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\ncontract GovernorAlpha {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"DefiSaver Governor Alpha\\\";\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public pure returns (uint) { return 40_000_000e18; } // 4% of DefiSaver\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public pure returns (uint) { return 10_000_000e18; } // 1% of DefiSaver\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint) { return 10; } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint) { return 1; } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    function votingPeriod() public pure returns (uint) { return 40_320; } // ~7 days in blocks (assuming 15s blocks)\\n\\n    /// @notice The address of the DefiSaver Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the DefiSaver governance token\\n    GovernanceTokenInterface public defiSaver_;\\n\\n    /// @notice The total number of proposals\\n    uint public proposalCount;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint id;\\n\\n        /// @notice Creator of the proposal\\n        address proposer;\\n\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint eta;\\n\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint[] values;\\n\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint startBlock;\\n\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint endBlock;\\n\\n        /// @notice Current number of votes in favor of this proposal\\n        uint forVotes;\\n\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint againstVotes;\\n\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping (address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n\\n        /// @notice Whether or not the voter supports the proposal\\n        bool support;\\n\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping (uint => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping (address => uint) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(address voter, uint proposalId, bool support, uint votes);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint id, uint eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint id);\\n\\n    /// @notice Hermes' only job is to deliver the timelock\\n    address hermes;\\n\\n    constructor(address hermes_, address defiSaver__) public {\\n        hermes = hermes_;\\n        defiSaver_ = GovernanceTokenInterface(defiSaver__);\\n    }\\n\\n    function setTimelock(address timelock_) public {\\n        require(msg.sender == hermes, \\\"only hermes can deliver the timelock\\\");\\n        timelock = TimelockInterface(timelock_);\\n        // Thanks hermes, your job is done\\n        hermes = address(0);\\n    }\\n\\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\\n        require(defiSaver_.getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold(), \\\"GovernorAlpha::propose: proposer votes below proposal threshold\\\");\\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \\\"GovernorAlpha::propose: proposal function information arity mismatch\\\");\\n        require(targets.length != 0, \\\"GovernorAlpha::propose: must provide actions\\\");\\n        require(targets.length <= proposalMaxOperations(), \\\"GovernorAlpha::propose: too many actions\\\");\\n\\n        uint latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n          ProposalState proposersLatestProposalState = state(latestProposalId);\\n          require(proposersLatestProposalState != ProposalState.Active, \\\"GovernorAlpha::propose: one live proposal per proposer, found an already active proposal\\\");\\n          require(proposersLatestProposalState != ProposalState.Pending, \\\"GovernorAlpha::propose: one live proposal per proposer, found an already pending proposal\\\");\\n        }\\n\\n        uint startBlock = add256(block.number, votingDelay());\\n        uint endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        Proposal memory newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            eta: 0,\\n            targets: targets,\\n            values: values,\\n            signatures: signatures,\\n            calldatas: calldatas,\\n            startBlock: startBlock,\\n            endBlock: endBlock,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            canceled: false,\\n            executed: false\\n        });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint proposalId) public {\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"GovernorAlpha::queue: proposal can only be queued if it is succeeded\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        uint eta = add256(block.timestamp, timelock.delay());\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \\\"GovernorAlpha::_queueOrRevert: proposal action already queued at eta\\\");\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint proposalId) public payable {\\n        require(state(proposalId) == ProposalState.Queued, \\\"GovernorAlpha::execute: proposal can only be executed if it is queued\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint proposalId) public {\\n        ProposalState state = state(proposalId);\\n        require(state != ProposalState.Executed, \\\"GovernorAlpha::cancel: cannot cancel executed proposal\\\");\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(defiSaver_.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold(), \\\"GovernorAlpha::cancel: proposer above threshold\\\");\\n\\n        proposal.canceled = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint proposalId) public view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint proposalId, address voter) public view returns (Receipt memory) {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint proposalId) public view returns (ProposalState) {\\n        require(proposalCount >= proposalId && proposalId > 0, \\\"GovernorAlpha::state: invalid proposal id\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes()) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.gracePeriod())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(uint proposalId, bool support, uint8 v, bytes32 r, bytes32 s) public {\\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"GovernorAlpha::castVoteBySig: invalid signature\\\");\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(address voter, uint proposalId, bool support) internal {\\n        require(state(proposalId) == ProposalState.Active, \\\"GovernorAlpha::_castVote: voting is closed\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(receipt.hasVoted == false, \\\"GovernorAlpha::_castVote: voter already voted\\\");\\n        uint96 votes = defiSaver_.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint) {\\n        uint chainId;\\n        assembly { chainId := chainid() }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint);\\n    function gracePeriod() external view returns (uint);\\n    function acceptAdmin() external;\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\\n}\\n\\ninterface GovernanceTokenInterface {\\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\\n}\",\"keccak256\":\"0x90585a3687bed548ef4ec66e10f8d974e41ff208f7c36facdb00cf808ad76249\"},\"contracts/test/GovernorZero.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../GovernorAlpha.sol\\\";\\n\\ncontract GovernorZero is GovernorAlpha {\\n\\n  /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n  function quorumVotes() public pure returns (uint) { return 1e18; } // 4% of DefiSaver\\n\\n  /// @notice The number of votes required in order for a voter to become a proposer\\n  function proposalThreshold() public pure returns (uint) { return 1e18; }\\n\\n  /// @notice The maximum number of actions that can be included in a proposal\\n  function proposalMaxOperations() public pure returns (uint) { return 10; } // 10 actions\\n\\n  /// @notice The delay before voting on a proposal may take place, once proposed\\n  function votingDelay() public pure returns (uint) { return 0; } // 1 block\\n\\n  /// @notice The duration of voting on a proposal, in blocks\\n  function votingPeriod() public pure returns (uint) { return 100; } // ~7 days in blocks (assuming 15s blocks)\\n\\n  constructor(address hermes_, address defiSaver__) public GovernorAlpha(hermes_, defiSaver__) {\\n  }\\n}\",\"keccak256\":\"0x449de21fb520ddb5c758b085ade2d8aaba0bf61e9f520ed287931bc547dd74db\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200336f3803806200336f833981016040819052620000349162000079565b600580546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055620000e4565b80516200007381620000ca565b92915050565b600080604083850312156200008d57600080fd5b60006200009b858562000066565b9250506020620000ae8582860162000066565b9150509250929050565b60006001600160a01b03821662000073565b620000d581620000b8565b8114620000e157600080fd5b50565b61327b80620000f46000396000f3fe6080604052600436106101405760003560e01c80634634c61f116100b6578063da35c6641161006f578063da35c66414610351578063da95691a14610366578063ddf0b00914610386578063deaaa7cc146103a6578063e23a9a52146103bb578063fe0d94c1146103e857610140565b80634634c61f146102c557806346fd76b4146102e55780637bdbe4d014610307578063b58131b01461021e578063bdacb3031461031c578063d33219b41461033c57610140565b806320606b701161010857806320606b701461020957806324bc1a641461021e578063328dd982146102335780633932abb1146102635780633e4f49e61461027857806340e58ee5146102a557610140565b8063013cf08b1461014557806302a251a31461018357806306fdde03146101a557806315373e3d146101c757806317977c61146101e9575b600080fd5b34801561015157600080fd5b506101656101603660046120e2565b6103fb565b60405161017a99989796959493929190613031565b60405180910390f35b34801561018f57600080fd5b50610198610454565b60405161017a9190612d8e565b3480156101b157600080fd5b506101ba61045a565b60405161017a9190612e4a565b3480156101d357600080fd5b506101e76101e236600461213a565b61048e565b005b3480156101f557600080fd5b50610198610204366004611f5f565b61049d565b34801561021557600080fd5b506101986104af565b34801561022a57600080fd5b506101986104c6565b34801561023f57600080fd5b5061025361024e3660046120e2565b6104d2565b60405161017a9493929190612d41565b34801561026f57600080fd5b50610198610761565b34801561028457600080fd5b506102986102933660046120e2565b610766565b60405161017a9190612e3c565b3480156102b157600080fd5b506101e76102c03660046120e2565b6108f1565b3480156102d157600080fd5b506101e76102e036600461216a565b610b45565b3480156102f157600080fd5b506102fa610cdd565b60405161017a9190612e2e565b34801561031357600080fd5b50610198610cec565b34801561032857600080fd5b506101e7610337366004611f5f565b610cf1565b34801561034857600080fd5b506102fa610d44565b34801561035d57600080fd5b50610198610d53565b34801561037257600080fd5b50610198610381366004611f85565b610d59565b34801561039257600080fd5b506101e76103a13660046120e2565b61117b565b3480156103b257600080fd5b506101986113e9565b3480156103c757600080fd5b506103db6103d6366004612100565b6113f5565b60405161017a9190612f7b565b6101e76103f63660046120e2565b611464565b6003602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b60645b90565b6040518060400160405280601881526020017744656669536176657220476f7665726e6f7220416c70686160401b81525081565b610499338383611629565b5050565b60046020526000908152604090205481565b6040516104bb90612c32565b604051809103902081565b670de0b6b3a764000090565b6060806060806000600360008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561055457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610536575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156105a657602002820191906000526020600020905b815481526020019060010190808311610592575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156106795760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156106655780601f1061063a57610100808354040283529160200191610665565b820191906000526020600020905b81548152906001019060200180831161064857829003601f168201915b5050505050815260200190600101906105ce565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561074b5760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156107375780601f1061070c57610100808354040283529160200191610737565b820191906000526020600020905b81548152906001019060200180831161071a57829003601f168201915b5050505050815260200190600101906106a0565b5050505090509450945094509450509193509193565b600090565b6000816002541015801561077a5750600082115b61079f5760405162461bcd60e51b815260040161079690612e7b565b60405180910390fd5b6000828152600360205260409020600b81015460ff16156107c45760029150506108ec565b806007015443116107d95760009150506108ec565b806008015443116107ee5760019150506108ec565b80600a0154816009015411158061080f57506108086104c6565b8160090154105b1561081e5760039150506108ec565b60028101546108315760049150506108ec565b600b810154610100900460ff161561084d5760079150506108ec565b60028101546000546040805163281b6df760e21b815290516108d693926001600160a01b03169163a06db7dc916004808301926020929190829003018186803b15801561089957600080fd5b505afa1580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108d1919081019061208f565b6117f2565b42106108e65760069150506108ec565b60059150505b919050565b60006108fc82610766565b9050600781600781111561090c57fe5b141561092a5760405162461bcd60e51b815260040161079690612f4b565b60008281526003602052604090206109406104c6565b60018054838201546001600160a01b039182169263782d6fe1929091169061096990439061181e565b6040518363ffffffff1660e01b8152600401610986929190612c63565b60206040518083038186803b15801561099e57600080fd5b505afa1580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109d691908101906121d2565b6001600160601b0316106109fc5760405162461bcd60e51b815260040161079690612edb565b600b8101805460ff1916600117905560005b6003820154811015610b08576000546003830180546001600160a01b039092169163591fcdfe919084908110610a4057fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610a6857fe5b9060005260206000200154856005018581548110610a8257fe5b90600052602060002001866006018681548110610a9b57fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610aca959493929190612d00565b600060405180830381600087803b158015610ae457600080fd5b505af1158015610af8573d6000803e3d6000fd5b505060019092019150610a0e9050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610b389190612d8e565b60405180910390a1505050565b6000604051610b5390612c32565b60408051918290038220828201909152601882527744656669536176657220476f7665726e6f7220416c70686160401b6020909201919091527f34f0107a89832f2697de4850fe91d33a1a038c57e6e86bb3686907aa9dac234f610bb5611846565b30604051602001610bc99493929190612d9c565b6040516020818303038152906040528051906020012090506000604051610bef90612c3d565b604051908190038120610c089189908990602001612dd1565b60405160208183030381529060405280519060200120905060008282604051602001610c35929190612c01565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610c729493929190612df9565b6020604051602081039080840390855afa158015610c94573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cc75760405162461bcd60e51b815260040161079690612f2b565b610cd2818a8a611629565b505050505050505050565b6001546001600160a01b031681565b600a90565b6005546001600160a01b03163314610d1b5760405162461bcd60e51b815260040161079690612f0b565b600080546001600160a01b039092166001600160a01b0319928316179055600580549091169055565b6000546001600160a01b031681565b60025481565b6000610d636104c6565b600180546001600160a01b03169063782d6fe1903390610d8490439061181e565b6040518363ffffffff1660e01b8152600401610da1929190612c48565b60206040518083038186803b158015610db957600080fd5b505afa158015610dcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610df191908101906121d2565b6001600160601b031611610e175760405162461bcd60e51b815260040161079690612f1b565b84518651148015610e29575083518651145b8015610e36575082518651145b610e525760405162461bcd60e51b815260040161079690612ecb565b8551610e705760405162461bcd60e51b815260040161079690612efb565b610e78610cec565b86511115610e985760405162461bcd60e51b815260040161079690612eab565b336000908152600460205260409020548015610f15576000610eb982610766565b90506001816007811115610ec957fe5b1415610ee75760405162461bcd60e51b815260040161079690612f3b565b6000816007811115610ef557fe5b1415610f135760405162461bcd60e51b815260040161079690612e9b565b505b6000610f23436108d1610761565b90506000610f33826108d1610454565b6002805460010190559050610f466119a9565b604051806101a001604052806002548152602001336001600160a01b03168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060036000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003019080519060200190611029929190611a1e565b5060808201518051611045916004840191602090910190611a83565b5060a08201518051611061916005840191602090910190611aca565b5060c0820151805161107d916006840191602090910190611b23565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff02191690831515021790555090505080600001516004600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e60405161116399989796959493929190612f89565b60405180910390a15193505050505b95945050505050565b600461118682610766565b600781111561119157fe5b146111ae5760405162461bcd60e51b815260040161079690612e5b565b600081815260036020908152604080832083548251630d48571f60e31b815292519194936112079342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b15801561089957600080fd5b905060005b60038301548110156113af576113a783600301828154811061122a57fe5b6000918252602090912001546004850180546001600160a01b03909216918490811061125257fe5b906000526020600020015485600501848154811061126c57fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156112fa5780601f106112cf576101008083540402835291602001916112fa565b820191906000526020600020905b8154815290600101906020018083116112dd57829003601f168201915b505050505086600601858154811061130e57fe5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561139c5780601f106113715761010080835404028352916020019161139c565b820191906000526020600020905b81548152906001019060200180831161137f57829003601f168201915b50505050508661184a565b60010161120c565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610b3890859084906130b7565b6040516104bb90612c3d565b6113fd611b7c565b5060008281526003602090815260408083206001600160a01b0385168452600c018252918290208251606081018452905460ff80821615158352610100820416151592820192909252620100009091046001600160601b0316918101919091525b92915050565b600561146f82610766565b600781111561147a57fe5b146114975760405162461bcd60e51b815260040161079690612e6b565b6000818152600360205260408120600b8101805461ff001916610100179055905b60038201548110156115ed576000546004830180546001600160a01b0390921691630825f38f9190849081106114ea57fe5b906000526020600020015484600301848154811061150457fe5b6000918252602090912001546004860180546001600160a01b03909216918690811061152c57fe5b906000526020600020015486600501868154811061154657fe5b9060005260206000200187600601878154811061155f57fe5b9060005260206000200188600201546040518763ffffffff1660e01b815260040161158e959493929190612d00565b6000604051808303818588803b1580156115a757600080fd5b505af11580156115bb573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526115e491908101906120ad565b506001016114b8565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f8260405161161d9190612d8e565b60405180910390a15050565b600161163483610766565b600781111561163f57fe5b1461165c5760405162461bcd60e51b815260040161079690612f5b565b60008281526003602090815260408083206001600160a01b0387168452600c8101909252909120805460ff16156116a55760405162461bcd60e51b815260040161079690612e8b565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe1916116db918a91600401612c63565b60206040518083038186803b1580156116f357600080fd5b505afa158015611707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172b91908101906121d2565b905083156117545761174a8360090154826001600160601b03166117f2565b6009840155611771565b61176b83600a0154826001600160601b03166117f2565b600a8401555b8154600160ff199091161761ff00191661010085151502176dffffffffffffffffffffffff00001916620100006001600160601b038316021782556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c46906117e2908890889088908690612c71565b60405180910390a1505050505050565b6000828201838110156118175760405162461bcd60e51b815260040161079690612ebb565b9392505050565b6000828211156118405760405162461bcd60e51b815260040161079690612f6b565b50900390565b4690565b6000546040516001600160a01b039091169063f2b06537906118789088908890889088908890602001612ca6565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016118aa9190612d8e565b60206040518083038186803b1580156118c257600080fd5b505afa1580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118fa9190810190612071565b156119175760405162461bcd60e51b815260040161079690612eeb565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f9019061194f9088908890889088908890600401612ca6565b602060405180830381600087803b15801561196957600080fd5b505af115801561197d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119a1919081019061208f565b505050505050565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611a73579160200282015b82811115611a7357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611a3e565b50611a7f929150611b9c565b5090565b828054828255906000526020600020908101928215611abe579160200282015b82811115611abe578251825591602001919060010190611aa3565b50611a7f929150611bc0565b828054828255906000526020600020908101928215611b17579160200282015b82811115611b175782518051611b07918491602090910190611bda565b5091602001919060010190611aea565b50611a7f929150611c47565b828054828255906000526020600020908101928215611b70579160200282015b82811115611b705782518051611b60918491602090910190611bda565b5091602001919060010190611b43565b50611a7f929150611c6a565b604080516060810182526000808252602082018190529181019190915290565b61045791905b80821115611a7f5780546001600160a01b0319168155600101611ba2565b61045791905b80821115611a7f5760008155600101611bc6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c1b57805160ff1916838001178555611abe565b82800160010185558215611abe5791820182811115611abe578251825591602001919060010190611aa3565b61045791905b80821115611a7f576000611c618282611c8d565b50600101611c4d565b61045791905b80821115611a7f576000611c848282611c8d565b50600101611c70565b50805460018160011615610100020316600290046000825580601f10611cb35750611cd1565b601f016020900490600052602060002090810190611cd19190611bc0565b50565b803561145e81613200565b600082601f830112611cf057600080fd5b8135611d03611cfe826130ec565b6130c5565b91508181835260208401935060208101905083856020840282011115611d2857600080fd5b60005b83811015611d545781611d3e8882611cd4565b8452506020928301929190910190600101611d2b565b5050505092915050565b600082601f830112611d6f57600080fd5b8135611d7d611cfe826130ec565b81815260209384019390925082018360005b83811015611d545781358601611da58882611eb4565b8452506020928301929190910190600101611d8f565b600082601f830112611dcc57600080fd5b8135611dda611cfe826130ec565b81815260209384019390925082018360005b83811015611d545781358601611e028882611eb4565b8452506020928301929190910190600101611dec565b600082601f830112611e2957600080fd5b8135611e37611cfe826130ec565b91508181835260208401935060208101905083856020840282011115611e5c57600080fd5b60005b83811015611d545781611e728882611e9e565b8452506020928301929190910190600101611e5f565b803561145e81613214565b805161145e81613214565b803561145e8161321d565b805161145e8161321d565b600082601f830112611ec557600080fd5b8135611ed3611cfe8261310d565b91508082526020830160208301858383011115611eef57600080fd5b611efa8382846131b4565b50505092915050565b600082601f830112611f1457600080fd5b8151611f22611cfe8261310d565b91508082526020830160208301858383011115611f3e57600080fd5b611efa8382846131c0565b803561145e81613226565b805161145e8161322f565b600060208284031215611f7157600080fd5b6000611f7d8484611cd4565b949350505050565b600080600080600060a08688031215611f9d57600080fd5b853567ffffffffffffffff811115611fb457600080fd5b611fc088828901611cdf565b955050602086013567ffffffffffffffff811115611fdd57600080fd5b611fe988828901611e18565b945050604086013567ffffffffffffffff81111561200657600080fd5b61201288828901611dbb565b935050606086013567ffffffffffffffff81111561202f57600080fd5b61203b88828901611d5e565b925050608086013567ffffffffffffffff81111561205857600080fd5b61206488828901611eb4565b9150509295509295909350565b60006020828403121561208357600080fd5b6000611f7d8484611e93565b6000602082840312156120a157600080fd5b6000611f7d8484611ea9565b6000602082840312156120bf57600080fd5b815167ffffffffffffffff8111156120d657600080fd5b611f7d84828501611f03565b6000602082840312156120f457600080fd5b6000611f7d8484611e9e565b6000806040838503121561211357600080fd5b600061211f8585611e9e565b925050602061213085828601611cd4565b9150509250929050565b6000806040838503121561214d57600080fd5b60006121598585611e9e565b925050602061213085828601611e88565b600080600080600060a0868803121561218257600080fd5b600061218e8888611e9e565b955050602061219f88828901611e88565b94505060406121b088828901611f49565b93505060606121c188828901611e9e565b925050608061206488828901611e9e565b6000602082840312156121e457600080fd5b6000611f7d8484611f54565b60006121fc838361222b565b505060200190565b600061181783836123cd565b60006121fc83836123b3565b6122258161318c565b82525050565b61222581613154565b600061223f82613147565b612249818561314b565b935061225483613135565b8060005b8381101561228257815161226c88826121f0565b975061227783613135565b925050600101612258565b509495945050505050565b600061229882613147565b6122a2818561314b565b9350836020820285016122b485613135565b8060005b858110156122ee57848403895281516122d18582612204565b94506122dc83613135565b60209a909a01999250506001016122b8565b5091979650505050505050565b600061230682613147565b612310818561314b565b93508360208202850161232285613135565b8060005b858110156122ee578484038952815161233f8582612204565b945061234a83613135565b60209a909a0199925050600101612326565b600061236782613147565b612371818561314b565b935061237c83613135565b8060005b838110156122825781516123948882612210565b975061239f83613135565b925050600101612380565b6122258161315f565b61222581610457565b6122256123c882610457565b610457565b60006123d882613147565b6123e2818561314b565b93506123f28185602086016131c0565b6123fb816131ec565b9093019392505050565b600081546001811660008114612422576001811461244857612487565b607f6002830416612433818761314b565b60ff1984168152955050602085019250612487565b60028204612456818761314b565b95506124618561313b565b60005b8281101561248057815488820152600190910190602001612464565b8701945050505b505092915050565b61222581613193565b6122258161319e565b60006124ae60448361314b565b7f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c206381527f616e206f6e6c79206265207175657565642069662069742069732073756363656020820152631959195960e21b604082015260600192915050565b600061251a60458361314b565b7f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c81527f2063616e206f6e6c7920626520657865637574656420696620697420697320716020820152641d595d595960da1b604082015260600192915050565b60006125876002836108ec565b61190160f01b815260020192915050565b60006125a560298361314b565b7f476f7665726e6f72416c7068613a3a73746174653a20696e76616c69642070728152681bdc1bdcd85b081a5960ba1b602082015260400192915050565b60006125f0602d8361314b565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722081526c185b1c9958591e481d9bdd1959609a1b602082015260400192915050565b600061263f60598361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b60006126c460288361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7981526720616374696f6e7360c01b602082015260400192915050565b600061270e60118361314b565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b600061273b6043836108ec565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b60006127a66027836108ec565b7f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c20738152667570706f72742960c81b602082015260270192915050565b60006127ef60448361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c81527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6020820152630c2e8c6d60e31b604082015260600192915050565b600061285b602f8361314b565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722081526e18589bdd99481d1a1c995cda1bdb19608a1b602082015260400192915050565b60006128ac60448361314b565b7f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a207081527f726f706f73616c20616374696f6e20616c7265616479207175657565642061746020820152632065746160e01b604082015260600192915050565b6000612918602c8361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f81526b7669646520616374696f6e7360a01b602082015260400192915050565b600061296660248361314b565b7f6f6e6c79206865726d65732063616e2064656c69766572207468652074696d658152636c6f636b60e01b602082015260400192915050565b60006129ac603f8361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657281527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400602082015260400192915050565b6000612a0b602f8361314b565b7f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e81526e76616c6964207369676e617475726560881b602082015260400192915050565b6000612a5c60588361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c7265616479206163746976652070726f706f73616c0000000000000000604082015260600192915050565b6000612ae160368361314b565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f742063618152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b602082015260400192915050565b6000612b39602a8361314b565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e67815269081a5cc818db1bdcd95960b21b602082015260400192915050565b6000612b8560158361314b565b747375627472616374696f6e20756e646572666c6f7760581b815260200192915050565b80516060830190612bba84826123aa565b506020820151612bcd60208501826123aa565b506040820151612be06040850182612bf8565b50505050565b6122258161317a565b612225816131a9565b61222581613180565b6000612c0c8261257a565b9150612c1882856123bc565b602082019150612c2882846123bc565b5060200192915050565b600061145e8261272e565b600061145e82612799565b60408101612c56828561221c565b61181760208301846123b3565b60408101612c56828561222b565b60808101612c7f828761222b565b612c8c60208301866123b3565b612c9960408301856123aa565b6111726060830184612bef565b60a08101612cb4828861222b565b612cc160208301876123b3565b8181036040830152612cd381866123cd565b90508181036060830152612ce781856123cd565b9050612cf660808301846123b3565b9695505050505050565b60a08101612d0e828861222b565b612d1b60208301876123b3565b8181036040830152612d2d8186612405565b90508181036060830152612ce78185612405565b60808082528101612d528187612234565b90508181036020830152612d66818661235c565b90508181036040830152612d7a81856122fb565b90508181036060830152612cf6818461228d565b6020810161145e82846123b3565b60808101612daa82876123b3565b612db760208301866123b3565b612dc460408301856123b3565b611172606083018461222b565b60608101612ddf82866123b3565b612dec60208301856123b3565b611f7d60408301846123aa565b60808101612e0782876123b3565b612e146020830186612be6565b612e2160408301856123b3565b61117260608301846123b3565b6020810161145e828461248f565b6020810161145e8284612498565b6020808252810161181781846123cd565b6020808252810161145e816124a1565b6020808252810161145e8161250d565b6020808252810161145e81612598565b6020808252810161145e816125e3565b6020808252810161145e81612632565b6020808252810161145e816126b7565b6020808252810161145e81612701565b6020808252810161145e816127e2565b6020808252810161145e8161284e565b6020808252810161145e8161289f565b6020808252810161145e8161290b565b6020808252810161145e81612959565b6020808252810161145e8161299f565b6020808252810161145e816129fe565b6020808252810161145e81612a4f565b6020808252810161145e81612ad4565b6020808252810161145e81612b2c565b6020808252810161145e81612b78565b6060810161145e8284612ba9565b6101208101612f98828c6123b3565b612fa5602083018b61221c565b8181036040830152612fb7818a612234565b90508181036060830152612fcb818961235c565b90508181036080830152612fdf81886122fb565b905081810360a0830152612ff3818761228d565b905061300260c08301866123b3565b61300f60e08301856123b3565b81810361010083015261302281846123cd565b9b9a5050505050505050505050565b6101208101613040828c6123b3565b61304d602083018b61222b565b61305a604083018a6123b3565b61306760608301896123b3565b61307460808301886123b3565b61308160a08301876123b3565b61308e60c08301866123b3565b61309b60e08301856123aa565b6130a96101008301846123aa565b9a9950505050505050505050565b60408101612c5682856123b3565b60405181810167ffffffffffffffff811182821017156130e457600080fd5b604052919050565b600067ffffffffffffffff82111561310357600080fd5b5060209081020190565b600067ffffffffffffffff82111561312457600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b600061145e8261316e565b151590565b806108ec816131f6565b6001600160a01b031690565b60ff1690565b6001600160601b031690565b600061145e825b600061145e82613154565b600061145e82613164565b600061145e82613180565b82818337506000910152565b60005b838110156131db5781810151838201526020016131c3565b83811115612be05750506000910152565b601f01601f191690565b60088110611cd157fe5b61320981613154565b8114611cd157600080fd5b6132098161315f565b61320981610457565b6132098161317a565b6132098161318056fea365627a7a72315820ba20de960db8c39dbe115ce550d4c8708b63688e2c87d0daf5517d86428124376c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x6080604052600436106101405760003560e01c80634634c61f116100b6578063da35c6641161006f578063da35c66414610351578063da95691a14610366578063ddf0b00914610386578063deaaa7cc146103a6578063e23a9a52146103bb578063fe0d94c1146103e857610140565b80634634c61f146102c557806346fd76b4146102e55780637bdbe4d014610307578063b58131b01461021e578063bdacb3031461031c578063d33219b41461033c57610140565b806320606b701161010857806320606b701461020957806324bc1a641461021e578063328dd982146102335780633932abb1146102635780633e4f49e61461027857806340e58ee5146102a557610140565b8063013cf08b1461014557806302a251a31461018357806306fdde03146101a557806315373e3d146101c757806317977c61146101e9575b600080fd5b34801561015157600080fd5b506101656101603660046120e2565b6103fb565b60405161017a99989796959493929190613031565b60405180910390f35b34801561018f57600080fd5b50610198610454565b60405161017a9190612d8e565b3480156101b157600080fd5b506101ba61045a565b60405161017a9190612e4a565b3480156101d357600080fd5b506101e76101e236600461213a565b61048e565b005b3480156101f557600080fd5b50610198610204366004611f5f565b61049d565b34801561021557600080fd5b506101986104af565b34801561022a57600080fd5b506101986104c6565b34801561023f57600080fd5b5061025361024e3660046120e2565b6104d2565b60405161017a9493929190612d41565b34801561026f57600080fd5b50610198610761565b34801561028457600080fd5b506102986102933660046120e2565b610766565b60405161017a9190612e3c565b3480156102b157600080fd5b506101e76102c03660046120e2565b6108f1565b3480156102d157600080fd5b506101e76102e036600461216a565b610b45565b3480156102f157600080fd5b506102fa610cdd565b60405161017a9190612e2e565b34801561031357600080fd5b50610198610cec565b34801561032857600080fd5b506101e7610337366004611f5f565b610cf1565b34801561034857600080fd5b506102fa610d44565b34801561035d57600080fd5b50610198610d53565b34801561037257600080fd5b50610198610381366004611f85565b610d59565b34801561039257600080fd5b506101e76103a13660046120e2565b61117b565b3480156103b257600080fd5b506101986113e9565b3480156103c757600080fd5b506103db6103d6366004612100565b6113f5565b60405161017a9190612f7b565b6101e76103f63660046120e2565b611464565b6003602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b60645b90565b6040518060400160405280601881526020017744656669536176657220476f7665726e6f7220416c70686160401b81525081565b610499338383611629565b5050565b60046020526000908152604090205481565b6040516104bb90612c32565b604051809103902081565b670de0b6b3a764000090565b6060806060806000600360008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561055457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610536575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156105a657602002820191906000526020600020905b815481526020019060010190808311610592575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156106795760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156106655780601f1061063a57610100808354040283529160200191610665565b820191906000526020600020905b81548152906001019060200180831161064857829003601f168201915b5050505050815260200190600101906105ce565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561074b5760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156107375780601f1061070c57610100808354040283529160200191610737565b820191906000526020600020905b81548152906001019060200180831161071a57829003601f168201915b5050505050815260200190600101906106a0565b5050505090509450945094509450509193509193565b600090565b6000816002541015801561077a5750600082115b61079f5760405162461bcd60e51b815260040161079690612e7b565b60405180910390fd5b6000828152600360205260409020600b81015460ff16156107c45760029150506108ec565b806007015443116107d95760009150506108ec565b806008015443116107ee5760019150506108ec565b80600a0154816009015411158061080f57506108086104c6565b8160090154105b1561081e5760039150506108ec565b60028101546108315760049150506108ec565b600b810154610100900460ff161561084d5760079150506108ec565b60028101546000546040805163281b6df760e21b815290516108d693926001600160a01b03169163a06db7dc916004808301926020929190829003018186803b15801561089957600080fd5b505afa1580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108d1919081019061208f565b6117f2565b42106108e65760069150506108ec565b60059150505b919050565b60006108fc82610766565b9050600781600781111561090c57fe5b141561092a5760405162461bcd60e51b815260040161079690612f4b565b60008281526003602052604090206109406104c6565b60018054838201546001600160a01b039182169263782d6fe1929091169061096990439061181e565b6040518363ffffffff1660e01b8152600401610986929190612c63565b60206040518083038186803b15801561099e57600080fd5b505afa1580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109d691908101906121d2565b6001600160601b0316106109fc5760405162461bcd60e51b815260040161079690612edb565b600b8101805460ff1916600117905560005b6003820154811015610b08576000546003830180546001600160a01b039092169163591fcdfe919084908110610a4057fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610a6857fe5b9060005260206000200154856005018581548110610a8257fe5b90600052602060002001866006018681548110610a9b57fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610aca959493929190612d00565b600060405180830381600087803b158015610ae457600080fd5b505af1158015610af8573d6000803e3d6000fd5b505060019092019150610a0e9050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610b389190612d8e565b60405180910390a1505050565b6000604051610b5390612c32565b60408051918290038220828201909152601882527744656669536176657220476f7665726e6f7220416c70686160401b6020909201919091527f34f0107a89832f2697de4850fe91d33a1a038c57e6e86bb3686907aa9dac234f610bb5611846565b30604051602001610bc99493929190612d9c565b6040516020818303038152906040528051906020012090506000604051610bef90612c3d565b604051908190038120610c089189908990602001612dd1565b60405160208183030381529060405280519060200120905060008282604051602001610c35929190612c01565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610c729493929190612df9565b6020604051602081039080840390855afa158015610c94573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cc75760405162461bcd60e51b815260040161079690612f2b565b610cd2818a8a611629565b505050505050505050565b6001546001600160a01b031681565b600a90565b6005546001600160a01b03163314610d1b5760405162461bcd60e51b815260040161079690612f0b565b600080546001600160a01b039092166001600160a01b0319928316179055600580549091169055565b6000546001600160a01b031681565b60025481565b6000610d636104c6565b600180546001600160a01b03169063782d6fe1903390610d8490439061181e565b6040518363ffffffff1660e01b8152600401610da1929190612c48565b60206040518083038186803b158015610db957600080fd5b505afa158015610dcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610df191908101906121d2565b6001600160601b031611610e175760405162461bcd60e51b815260040161079690612f1b565b84518651148015610e29575083518651145b8015610e36575082518651145b610e525760405162461bcd60e51b815260040161079690612ecb565b8551610e705760405162461bcd60e51b815260040161079690612efb565b610e78610cec565b86511115610e985760405162461bcd60e51b815260040161079690612eab565b336000908152600460205260409020548015610f15576000610eb982610766565b90506001816007811115610ec957fe5b1415610ee75760405162461bcd60e51b815260040161079690612f3b565b6000816007811115610ef557fe5b1415610f135760405162461bcd60e51b815260040161079690612e9b565b505b6000610f23436108d1610761565b90506000610f33826108d1610454565b6002805460010190559050610f466119a9565b604051806101a001604052806002548152602001336001600160a01b03168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060036000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003019080519060200190611029929190611a1e565b5060808201518051611045916004840191602090910190611a83565b5060a08201518051611061916005840191602090910190611aca565b5060c0820151805161107d916006840191602090910190611b23565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff02191690831515021790555090505080600001516004600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e60405161116399989796959493929190612f89565b60405180910390a15193505050505b95945050505050565b600461118682610766565b600781111561119157fe5b146111ae5760405162461bcd60e51b815260040161079690612e5b565b600081815260036020908152604080832083548251630d48571f60e31b815292519194936112079342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b15801561089957600080fd5b905060005b60038301548110156113af576113a783600301828154811061122a57fe5b6000918252602090912001546004850180546001600160a01b03909216918490811061125257fe5b906000526020600020015485600501848154811061126c57fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156112fa5780601f106112cf576101008083540402835291602001916112fa565b820191906000526020600020905b8154815290600101906020018083116112dd57829003601f168201915b505050505086600601858154811061130e57fe5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561139c5780601f106113715761010080835404028352916020019161139c565b820191906000526020600020905b81548152906001019060200180831161137f57829003601f168201915b50505050508661184a565b60010161120c565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610b3890859084906130b7565b6040516104bb90612c3d565b6113fd611b7c565b5060008281526003602090815260408083206001600160a01b0385168452600c018252918290208251606081018452905460ff80821615158352610100820416151592820192909252620100009091046001600160601b0316918101919091525b92915050565b600561146f82610766565b600781111561147a57fe5b146114975760405162461bcd60e51b815260040161079690612e6b565b6000818152600360205260408120600b8101805461ff001916610100179055905b60038201548110156115ed576000546004830180546001600160a01b0390921691630825f38f9190849081106114ea57fe5b906000526020600020015484600301848154811061150457fe5b6000918252602090912001546004860180546001600160a01b03909216918690811061152c57fe5b906000526020600020015486600501868154811061154657fe5b9060005260206000200187600601878154811061155f57fe5b9060005260206000200188600201546040518763ffffffff1660e01b815260040161158e959493929190612d00565b6000604051808303818588803b1580156115a757600080fd5b505af11580156115bb573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526115e491908101906120ad565b506001016114b8565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f8260405161161d9190612d8e565b60405180910390a15050565b600161163483610766565b600781111561163f57fe5b1461165c5760405162461bcd60e51b815260040161079690612f5b565b60008281526003602090815260408083206001600160a01b0387168452600c8101909252909120805460ff16156116a55760405162461bcd60e51b815260040161079690612e8b565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe1916116db918a91600401612c63565b60206040518083038186803b1580156116f357600080fd5b505afa158015611707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172b91908101906121d2565b905083156117545761174a8360090154826001600160601b03166117f2565b6009840155611771565b61176b83600a0154826001600160601b03166117f2565b600a8401555b8154600160ff199091161761ff00191661010085151502176dffffffffffffffffffffffff00001916620100006001600160601b038316021782556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c46906117e2908890889088908690612c71565b60405180910390a1505050505050565b6000828201838110156118175760405162461bcd60e51b815260040161079690612ebb565b9392505050565b6000828211156118405760405162461bcd60e51b815260040161079690612f6b565b50900390565b4690565b6000546040516001600160a01b039091169063f2b06537906118789088908890889088908890602001612ca6565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016118aa9190612d8e565b60206040518083038186803b1580156118c257600080fd5b505afa1580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118fa9190810190612071565b156119175760405162461bcd60e51b815260040161079690612eeb565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f9019061194f9088908890889088908890600401612ca6565b602060405180830381600087803b15801561196957600080fd5b505af115801561197d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119a1919081019061208f565b505050505050565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611a73579160200282015b82811115611a7357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611a3e565b50611a7f929150611b9c565b5090565b828054828255906000526020600020908101928215611abe579160200282015b82811115611abe578251825591602001919060010190611aa3565b50611a7f929150611bc0565b828054828255906000526020600020908101928215611b17579160200282015b82811115611b175782518051611b07918491602090910190611bda565b5091602001919060010190611aea565b50611a7f929150611c47565b828054828255906000526020600020908101928215611b70579160200282015b82811115611b705782518051611b60918491602090910190611bda565b5091602001919060010190611b43565b50611a7f929150611c6a565b604080516060810182526000808252602082018190529181019190915290565b61045791905b80821115611a7f5780546001600160a01b0319168155600101611ba2565b61045791905b80821115611a7f5760008155600101611bc6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c1b57805160ff1916838001178555611abe565b82800160010185558215611abe5791820182811115611abe578251825591602001919060010190611aa3565b61045791905b80821115611a7f576000611c618282611c8d565b50600101611c4d565b61045791905b80821115611a7f576000611c848282611c8d565b50600101611c70565b50805460018160011615610100020316600290046000825580601f10611cb35750611cd1565b601f016020900490600052602060002090810190611cd19190611bc0565b50565b803561145e81613200565b600082601f830112611cf057600080fd5b8135611d03611cfe826130ec565b6130c5565b91508181835260208401935060208101905083856020840282011115611d2857600080fd5b60005b83811015611d545781611d3e8882611cd4565b8452506020928301929190910190600101611d2b565b5050505092915050565b600082601f830112611d6f57600080fd5b8135611d7d611cfe826130ec565b81815260209384019390925082018360005b83811015611d545781358601611da58882611eb4565b8452506020928301929190910190600101611d8f565b600082601f830112611dcc57600080fd5b8135611dda611cfe826130ec565b81815260209384019390925082018360005b83811015611d545781358601611e028882611eb4565b8452506020928301929190910190600101611dec565b600082601f830112611e2957600080fd5b8135611e37611cfe826130ec565b91508181835260208401935060208101905083856020840282011115611e5c57600080fd5b60005b83811015611d545781611e728882611e9e565b8452506020928301929190910190600101611e5f565b803561145e81613214565b805161145e81613214565b803561145e8161321d565b805161145e8161321d565b600082601f830112611ec557600080fd5b8135611ed3611cfe8261310d565b91508082526020830160208301858383011115611eef57600080fd5b611efa8382846131b4565b50505092915050565b600082601f830112611f1457600080fd5b8151611f22611cfe8261310d565b91508082526020830160208301858383011115611f3e57600080fd5b611efa8382846131c0565b803561145e81613226565b805161145e8161322f565b600060208284031215611f7157600080fd5b6000611f7d8484611cd4565b949350505050565b600080600080600060a08688031215611f9d57600080fd5b853567ffffffffffffffff811115611fb457600080fd5b611fc088828901611cdf565b955050602086013567ffffffffffffffff811115611fdd57600080fd5b611fe988828901611e18565b945050604086013567ffffffffffffffff81111561200657600080fd5b61201288828901611dbb565b935050606086013567ffffffffffffffff81111561202f57600080fd5b61203b88828901611d5e565b925050608086013567ffffffffffffffff81111561205857600080fd5b61206488828901611eb4565b9150509295509295909350565b60006020828403121561208357600080fd5b6000611f7d8484611e93565b6000602082840312156120a157600080fd5b6000611f7d8484611ea9565b6000602082840312156120bf57600080fd5b815167ffffffffffffffff8111156120d657600080fd5b611f7d84828501611f03565b6000602082840312156120f457600080fd5b6000611f7d8484611e9e565b6000806040838503121561211357600080fd5b600061211f8585611e9e565b925050602061213085828601611cd4565b9150509250929050565b6000806040838503121561214d57600080fd5b60006121598585611e9e565b925050602061213085828601611e88565b600080600080600060a0868803121561218257600080fd5b600061218e8888611e9e565b955050602061219f88828901611e88565b94505060406121b088828901611f49565b93505060606121c188828901611e9e565b925050608061206488828901611e9e565b6000602082840312156121e457600080fd5b6000611f7d8484611f54565b60006121fc838361222b565b505060200190565b600061181783836123cd565b60006121fc83836123b3565b6122258161318c565b82525050565b61222581613154565b600061223f82613147565b612249818561314b565b935061225483613135565b8060005b8381101561228257815161226c88826121f0565b975061227783613135565b925050600101612258565b509495945050505050565b600061229882613147565b6122a2818561314b565b9350836020820285016122b485613135565b8060005b858110156122ee57848403895281516122d18582612204565b94506122dc83613135565b60209a909a01999250506001016122b8565b5091979650505050505050565b600061230682613147565b612310818561314b565b93508360208202850161232285613135565b8060005b858110156122ee578484038952815161233f8582612204565b945061234a83613135565b60209a909a0199925050600101612326565b600061236782613147565b612371818561314b565b935061237c83613135565b8060005b838110156122825781516123948882612210565b975061239f83613135565b925050600101612380565b6122258161315f565b61222581610457565b6122256123c882610457565b610457565b60006123d882613147565b6123e2818561314b565b93506123f28185602086016131c0565b6123fb816131ec565b9093019392505050565b600081546001811660008114612422576001811461244857612487565b607f6002830416612433818761314b565b60ff1984168152955050602085019250612487565b60028204612456818761314b565b95506124618561313b565b60005b8281101561248057815488820152600190910190602001612464565b8701945050505b505092915050565b61222581613193565b6122258161319e565b60006124ae60448361314b565b7f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c206381527f616e206f6e6c79206265207175657565642069662069742069732073756363656020820152631959195960e21b604082015260600192915050565b600061251a60458361314b565b7f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c81527f2063616e206f6e6c7920626520657865637574656420696620697420697320716020820152641d595d595960da1b604082015260600192915050565b60006125876002836108ec565b61190160f01b815260020192915050565b60006125a560298361314b565b7f476f7665726e6f72416c7068613a3a73746174653a20696e76616c69642070728152681bdc1bdcd85b081a5960ba1b602082015260400192915050565b60006125f0602d8361314b565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722081526c185b1c9958591e481d9bdd1959609a1b602082015260400192915050565b600061263f60598361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b60006126c460288361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7981526720616374696f6e7360c01b602082015260400192915050565b600061270e60118361314b565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b600061273b6043836108ec565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b60006127a66027836108ec565b7f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c20738152667570706f72742960c81b602082015260270192915050565b60006127ef60448361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c81527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6020820152630c2e8c6d60e31b604082015260600192915050565b600061285b602f8361314b565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722081526e18589bdd99481d1a1c995cda1bdb19608a1b602082015260400192915050565b60006128ac60448361314b565b7f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a207081527f726f706f73616c20616374696f6e20616c7265616479207175657565642061746020820152632065746160e01b604082015260600192915050565b6000612918602c8361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f81526b7669646520616374696f6e7360a01b602082015260400192915050565b600061296660248361314b565b7f6f6e6c79206865726d65732063616e2064656c69766572207468652074696d658152636c6f636b60e01b602082015260400192915050565b60006129ac603f8361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657281527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400602082015260400192915050565b6000612a0b602f8361314b565b7f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e81526e76616c6964207369676e617475726560881b602082015260400192915050565b6000612a5c60588361314b565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c7265616479206163746976652070726f706f73616c0000000000000000604082015260600192915050565b6000612ae160368361314b565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f742063618152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b602082015260400192915050565b6000612b39602a8361314b565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e67815269081a5cc818db1bdcd95960b21b602082015260400192915050565b6000612b8560158361314b565b747375627472616374696f6e20756e646572666c6f7760581b815260200192915050565b80516060830190612bba84826123aa565b506020820151612bcd60208501826123aa565b506040820151612be06040850182612bf8565b50505050565b6122258161317a565b612225816131a9565b61222581613180565b6000612c0c8261257a565b9150612c1882856123bc565b602082019150612c2882846123bc565b5060200192915050565b600061145e8261272e565b600061145e82612799565b60408101612c56828561221c565b61181760208301846123b3565b60408101612c56828561222b565b60808101612c7f828761222b565b612c8c60208301866123b3565b612c9960408301856123aa565b6111726060830184612bef565b60a08101612cb4828861222b565b612cc160208301876123b3565b8181036040830152612cd381866123cd565b90508181036060830152612ce781856123cd565b9050612cf660808301846123b3565b9695505050505050565b60a08101612d0e828861222b565b612d1b60208301876123b3565b8181036040830152612d2d8186612405565b90508181036060830152612ce78185612405565b60808082528101612d528187612234565b90508181036020830152612d66818661235c565b90508181036040830152612d7a81856122fb565b90508181036060830152612cf6818461228d565b6020810161145e82846123b3565b60808101612daa82876123b3565b612db760208301866123b3565b612dc460408301856123b3565b611172606083018461222b565b60608101612ddf82866123b3565b612dec60208301856123b3565b611f7d60408301846123aa565b60808101612e0782876123b3565b612e146020830186612be6565b612e2160408301856123b3565b61117260608301846123b3565b6020810161145e828461248f565b6020810161145e8284612498565b6020808252810161181781846123cd565b6020808252810161145e816124a1565b6020808252810161145e8161250d565b6020808252810161145e81612598565b6020808252810161145e816125e3565b6020808252810161145e81612632565b6020808252810161145e816126b7565b6020808252810161145e81612701565b6020808252810161145e816127e2565b6020808252810161145e8161284e565b6020808252810161145e8161289f565b6020808252810161145e8161290b565b6020808252810161145e81612959565b6020808252810161145e8161299f565b6020808252810161145e816129fe565b6020808252810161145e81612a4f565b6020808252810161145e81612ad4565b6020808252810161145e81612b2c565b6020808252810161145e81612b78565b6060810161145e8284612ba9565b6101208101612f98828c6123b3565b612fa5602083018b61221c565b8181036040830152612fb7818a612234565b90508181036060830152612fcb818961235c565b90508181036080830152612fdf81886122fb565b905081810360a0830152612ff3818761228d565b905061300260c08301866123b3565b61300f60e08301856123b3565b81810361010083015261302281846123cd565b9b9a5050505050505050505050565b6101208101613040828c6123b3565b61304d602083018b61222b565b61305a604083018a6123b3565b61306760608301896123b3565b61307460808301886123b3565b61308160a08301876123b3565b61308e60c08301866123b3565b61309b60e08301856123aa565b6130a96101008301846123aa565b9a9950505050505050505050565b60408101612c5682856123b3565b60405181810167ffffffffffffffff811182821017156130e457600080fd5b604052919050565b600067ffffffffffffffff82111561310357600080fd5b5060209081020190565b600067ffffffffffffffff82111561312457600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b600061145e8261316e565b151590565b806108ec816131f6565b6001600160a01b031690565b60ff1690565b6001600160601b031690565b600061145e825b600061145e82613154565b600061145e82613164565b600061145e82613180565b82818337506000910152565b60005b838110156131db5781810151838201526020016131c3565b83811115612be05750506000910152565b601f01601f191690565b60088110611cd157fe5b61320981613154565b8114611cd157600080fd5b6132098161315f565b61320981610457565b6132098161317a565b6132098161318056fea365627a7a72315820ba20de960db8c39dbe115ce550d4c8708b63688e2c87d0daf5517d86428124376c6578706572696d656e74616cf564736f6c63430005100040",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    }
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 47,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "timelock",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(TimelockInterface)1149"
      },
      {
        "astId": 49,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "defiSaver_",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(GovernanceTokenInterface)1159"
      },
      {
        "astId": 51,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "proposalCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 106,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "proposals",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Proposal)86_storage)"
      },
      {
        "astId": 110,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 170,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "hermes",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(GovernanceTokenInterface)1159": {
        "encoding": "inplace",
        "label": "contract GovernanceTokenInterface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)1149": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)93_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorAlpha.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)93_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)86_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorAlpha.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)86_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)86_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Proposal",
        "members": [
          {
            "astId": 53,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 55,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 57,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 60,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 63,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 66,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 69,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 71,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 73,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 77,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 79,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "canceled",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 81,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "executed",
            "offset": 1,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 85,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "receipts",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(Receipt)93_storage)"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(Receipt)93_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Receipt",
        "members": [
          {
            "astId": 88,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 90,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 92,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}