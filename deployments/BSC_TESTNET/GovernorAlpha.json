{
  "address": "0x1eDfa24Ba61d1df058Cf6De09eb00De598dc3402",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hermes_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorAlpha.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract GovernanceTokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        }
      ],
      "name": "setTimelock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorAlpha.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x6d23c6b6148db6654a193aae37eceee21e3062821b8be97bbfcfaeb93a839a6f",
  "receipt": {
    "to": null,
    "from": "0x77745E5ac1b80C84021B4Ef80a33Dfc0A69249D2",
    "contractAddress": "0x1eDfa24Ba61d1df058Cf6De09eb00De598dc3402",
    "transactionIndex": 3,
    "gasUsed": "2891271",
    "logsBloom": "0x
    "blockHash": "0xb0590614ba66bc5b716865e943f4393b87015c193ef6047ad63f41b842a4dd48",
    "transactionHash": "0x6d23c6b6148db6654a193aae37eceee21e3062821b8be97bbfcfaeb93a839a6f",
    "logs": [],
    "blockNumber": 7255849,
    "cumulativeGasUsed": "4056105",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x77745E5ac1b80C84021B4Ef80a33Dfc0A69249D2",
    "0x8f7aA0B7c46E8273cb07F1D9D1ACb3B2a9ccdfD1"
  ],
  "solcInputHash": "d04191a8a4d04808c1fd5dbc685648c1",
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hermes_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorAlpha.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract GovernanceTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"}],\"name\":\"setTimelock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorAlpha.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/test/GovernorZero.sol\":\"GovernorZero\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernorAlpha.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\n\\ncontract GovernorAlpha {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"PoolTogether Governor Alpha\\\";\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public pure returns (uint) { return 100_000e18; } // 1% of Pool\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public pure returns (uint) { return 10_000e18; } // 0.1% of Pool\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint) { return 10; } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint) { return 1; } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    function votingPeriod() public pure returns (uint) { return 28_800; } // ~5 days in blocks (assuming 15s blocks)\\n\\n    /// @notice The address of the Pool Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the Pool governance token\\n    GovernanceTokenInterface public pool;\\n\\n    /// @notice The total number of proposals\\n    uint public proposalCount;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint id;\\n\\n        /// @notice Creator of the proposal\\n        address proposer;\\n\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint eta;\\n\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint[] values;\\n\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint startBlock;\\n\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint endBlock;\\n\\n        /// @notice Current number of votes in favor of this proposal\\n        uint forVotes;\\n\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint againstVotes;\\n\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping (address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n\\n        /// @notice Whether or not the voter supports the proposal\\n        bool support;\\n\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping (uint => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping (address => uint) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(address voter, uint proposalId, bool support, uint votes);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint id, uint eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint id);\\n\\n    /// @notice Hermes' only job is to deliver the timelock\\n    address hermes;\\n\\n    constructor(address hermes_, address pool_) public {\\n        hermes = hermes_;\\n        pool = GovernanceTokenInterface(pool_);\\n    }\\n\\n    function setTimelock(address timelock_) public {\\n        require(msg.sender == hermes, \\\"only hermes can deliver the timelock\\\");\\n        timelock = TimelockInterface(timelock_);\\n        // Thanks hermes, your job is done\\n        hermes = address(0);\\n    }\\n\\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\\n        require(pool.getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold(), \\\"GovernorAlpha::propose: proposer votes below proposal threshold\\\");\\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \\\"GovernorAlpha::propose: proposal function information arity mismatch\\\");\\n        require(targets.length != 0, \\\"GovernorAlpha::propose: must provide actions\\\");\\n        require(targets.length <= proposalMaxOperations(), \\\"GovernorAlpha::propose: too many actions\\\");\\n\\n        uint latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n          ProposalState proposersLatestProposalState = state(latestProposalId);\\n          require(proposersLatestProposalState != ProposalState.Active, \\\"GovernorAlpha::propose: one live proposal per proposer, found an already active proposal\\\");\\n          require(proposersLatestProposalState != ProposalState.Pending, \\\"GovernorAlpha::propose: one live proposal per proposer, found an already pending proposal\\\");\\n        }\\n\\n        uint startBlock = add256(block.number, votingDelay());\\n        uint endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        Proposal memory newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            eta: 0,\\n            targets: targets,\\n            values: values,\\n            signatures: signatures,\\n            calldatas: calldatas,\\n            startBlock: startBlock,\\n            endBlock: endBlock,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            canceled: false,\\n            executed: false\\n        });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint proposalId) public {\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"GovernorAlpha::queue: proposal can only be queued if it is succeeded\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        uint eta = add256(block.timestamp, timelock.delay());\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \\\"GovernorAlpha::_queueOrRevert: proposal action already queued at eta\\\");\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint proposalId) public payable {\\n        require(state(proposalId) == ProposalState.Queued, \\\"GovernorAlpha::execute: proposal can only be executed if it is queued\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint proposalId) public {\\n        ProposalState state = state(proposalId);\\n        require(state != ProposalState.Executed, \\\"GovernorAlpha::cancel: cannot cancel executed proposal\\\");\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(pool.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold(), \\\"GovernorAlpha::cancel: proposer above threshold\\\");\\n\\n        proposal.canceled = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint proposalId) public view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint proposalId, address voter) public view returns (Receipt memory) {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint proposalId) public view returns (ProposalState) {\\n        require(proposalCount >= proposalId && proposalId > 0, \\\"GovernorAlpha::state: invalid proposal id\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes()) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.gracePeriod())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(uint proposalId, bool support, uint8 v, bytes32 r, bytes32 s) public {\\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"GovernorAlpha::castVoteBySig: invalid signature\\\");\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(address voter, uint proposalId, bool support) internal {\\n        require(state(proposalId) == ProposalState.Active, \\\"GovernorAlpha::_castVote: voting is closed\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(receipt.hasVoted == false, \\\"GovernorAlpha::_castVote: voter already voted\\\");\\n        uint96 votes = pool.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint) {\\n        uint chainId;\\n        assembly { chainId := chainid() }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint);\\n    function gracePeriod() external view returns (uint);\\n    function acceptAdmin() external;\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\\n}\\n\\ninterface GovernanceTokenInterface {\\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\\n}\",\"keccak256\":\"0x218bbaec50a8718cdc46f66a7455e8bd0a3c2b4cab78a977d758296cd5c2b045\"},\"contracts/test/GovernorZero.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../GovernorAlpha.sol\\\";\\n\\ncontract GovernorZero is GovernorAlpha {\\n\\n  /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n  function quorumVotes() public pure returns (uint) { return 1e18; } // 1% of Pool\\n\\n  /// @notice The number of votes required in order for a voter to become a proposer\\n  function proposalThreshold() public pure returns (uint) { return 1e18; }\\n\\n  /// @notice The maximum number of actions that can be included in a proposal\\n  function proposalMaxOperations() public pure returns (uint) { return 10; } // 10 actions\\n\\n  /// @notice The delay before voting on a proposal may take place, once proposed\\n  function votingDelay() public pure returns (uint) { return 0; } // 1 block\\n\\n  /// @notice The duration of voting on a proposal, in blocks\\n  function votingPeriod() public pure returns (uint) { return 100; } // ~7 days in blocks (assuming 15s blocks)\\n\\n  constructor(address hermes_, address pool_) public GovernorAlpha(hermes_, pool_) {\\n  }\\n}\",\"keccak256\":\"0xde99b1e9f9f9f688ff0c1de0ad81288a646e24513d54346d8d302947ad4bfb82\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200337938038062003379833981016040819052620000349162000079565b600580546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055620000e4565b80516200007381620000ca565b92915050565b600080604083850312156200008d57600080fd5b60006200009b858562000066565b9250506020620000ae8582860162000066565b9150509250929050565b60006001600160a01b03821662000073565b620000d581620000b8565b8114620000e157600080fd5b50565b61328580620000f46000396000f3fe6080604052600436106101405760003560e01c806340e58ee5116100b6578063da35c6641161006f578063da35c66414610351578063da95691a14610366578063ddf0b00914610386578063deaaa7cc146103a6578063e23a9a52146103bb578063fe0d94c1146103e857610140565b806340e58ee5146102c75780634634c61f146102e75780637bdbe4d014610307578063b58131b014610240578063bdacb3031461031c578063d33219b41461033c57610140565b806317977c611161010857806317977c611461020b57806320606b701461022b57806324bc1a6414610240578063328dd982146102555780633932abb1146102855780633e4f49e61461029a57610140565b8063013cf08b1461014557806302a251a31461018357806306fdde03146101a557806315373e3d146101c757806316f0115b146101e9575b600080fd5b34801561015157600080fd5b506101656101603660046120ec565b6103fb565b60405161017a9998979695949392919061303b565b60405180910390f35b34801561018f57600080fd5b50610198610454565b60405161017a9190612d98565b3480156101b157600080fd5b506101ba61045a565b60405161017a9190612e54565b3480156101d357600080fd5b506101e76101e2366004612144565b610493565b005b3480156101f557600080fd5b506101fe6104a2565b60405161017a9190612e38565b34801561021757600080fd5b50610198610226366004611f69565b6104b1565b34801561023757600080fd5b506101986104c3565b34801561024c57600080fd5b506101986104da565b34801561026157600080fd5b506102756102703660046120ec565b6104e6565b60405161017a9493929190612d4b565b34801561029157600080fd5b50610198610775565b3480156102a657600080fd5b506102ba6102b53660046120ec565b61077a565b60405161017a9190612e46565b3480156102d357600080fd5b506101e76102e23660046120ec565b610905565b3480156102f357600080fd5b506101e7610302366004612174565b610b59565b34801561031357600080fd5b50610198610cf6565b34801561032857600080fd5b506101e7610337366004611f69565b610cfb565b34801561034857600080fd5b506101fe610d4e565b34801561035d57600080fd5b50610198610d5d565b34801561037257600080fd5b50610198610381366004611f8f565b610d63565b34801561039257600080fd5b506101e76103a13660046120ec565b611185565b3480156103b257600080fd5b506101986113f3565b3480156103c757600080fd5b506103db6103d636600461210a565b6113ff565b60405161017a9190612f85565b6101e76103f63660046120ec565b61146e565b6003602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b60645b90565b6040518060400160405280601b81526020017f506f6f6c546f67657468657220476f7665726e6f7220416c706861000000000081525081565b61049e338383611633565b5050565b6001546001600160a01b031681565b60046020526000908152604090205481565b6040516104cf90612c3c565b604051809103902081565b670de0b6b3a764000090565b6060806060806000600360008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561056857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161054a575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156105ba57602002820191906000526020600020905b8154815260200190600101908083116105a6575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561068d5760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b5050505050815260200190600101906105e2565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561075f5760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561074b5780601f106107205761010080835404028352916020019161074b565b820191906000526020600020905b81548152906001019060200180831161072e57829003601f168201915b5050505050815260200190600101906106b4565b5050505090509450945094509450509193509193565b600090565b6000816002541015801561078e5750600082115b6107b35760405162461bcd60e51b81526004016107aa90612e85565b60405180910390fd5b6000828152600360205260409020600b81015460ff16156107d8576002915050610900565b806007015443116107ed576000915050610900565b80600801544311610802576001915050610900565b80600a01548160090154111580610823575061081c6104da565b8160090154105b15610832576003915050610900565b6002810154610845576004915050610900565b600b810154610100900460ff1615610861576007915050610900565b60028101546000546040805163281b6df760e21b815290516108ea93926001600160a01b03169163a06db7dc916004808301926020929190829003018186803b1580156108ad57600080fd5b505afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108e59190810190612099565b6117fc565b42106108fa576006915050610900565b60059150505b919050565b60006109108261077a565b9050600781600781111561092057fe5b141561093e5760405162461bcd60e51b81526004016107aa90612f55565b60008281526003602052604090206109546104da565b60018054838201546001600160a01b039182169263782d6fe1929091169061097d904390611828565b6040518363ffffffff1660e01b815260040161099a929190612c6d565b60206040518083038186803b1580156109b257600080fd5b505afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109ea91908101906121dc565b6001600160601b031610610a105760405162461bcd60e51b81526004016107aa90612ee5565b600b8101805460ff1916600117905560005b6003820154811015610b1c576000546003830180546001600160a01b039092169163591fcdfe919084908110610a5457fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610a7c57fe5b9060005260206000200154856005018581548110610a9657fe5b90600052602060002001866006018681548110610aaf57fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610ade959493929190612d0a565b600060405180830381600087803b158015610af857600080fd5b505af1158015610b0c573d6000803e3d6000fd5b505060019092019150610a229050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610b4c9190612d98565b60405180910390a1505050565b6000604051610b6790612c3c565b60408051918290038220828201909152601b82527f506f6f6c546f67657468657220476f7665726e6f7220416c70686100000000006020909201919091527fe6cce8dae3de26f4bb5e25e9bafdf3502d0ddf2acbace2e7261e1a8c96405629610bce611850565b30604051602001610be29493929190612da6565b6040516020818303038152906040528051906020012090506000604051610c0890612c47565b604051908190038120610c219189908990602001612ddb565b60405160208183030381529060405280519060200120905060008282604051602001610c4e929190612c0b565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610c8b9493929190612e03565b6020604051602081039080840390855afa158015610cad573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ce05760405162461bcd60e51b81526004016107aa90612f35565b610ceb818a8a611633565b505050505050505050565b600a90565b6005546001600160a01b03163314610d255760405162461bcd60e51b81526004016107aa90612f15565b600080546001600160a01b039092166001600160a01b0319928316179055600580549091169055565b6000546001600160a01b031681565b60025481565b6000610d6d6104da565b600180546001600160a01b03169063782d6fe1903390610d8e904390611828565b6040518363ffffffff1660e01b8152600401610dab929190612c52565b60206040518083038186803b158015610dc357600080fd5b505afa158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dfb91908101906121dc565b6001600160601b031611610e215760405162461bcd60e51b81526004016107aa90612f25565b84518651148015610e33575083518651145b8015610e40575082518651145b610e5c5760405162461bcd60e51b81526004016107aa90612ed5565b8551610e7a5760405162461bcd60e51b81526004016107aa90612f05565b610e82610cf6565b86511115610ea25760405162461bcd60e51b81526004016107aa90612eb5565b336000908152600460205260409020548015610f1f576000610ec38261077a565b90506001816007811115610ed357fe5b1415610ef15760405162461bcd60e51b81526004016107aa90612f45565b6000816007811115610eff57fe5b1415610f1d5760405162461bcd60e51b81526004016107aa90612ea5565b505b6000610f2d436108e5610775565b90506000610f3d826108e5610454565b6002805460010190559050610f506119b3565b604051806101a001604052806002548152602001336001600160a01b03168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060036000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003019080519060200190611033929190611a28565b506080820151805161104f916004840191602090910190611a8d565b5060a0820151805161106b916005840191602090910190611ad4565b5060c08201518051611087916006840191602090910190611b2d565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff02191690831515021790555090505080600001516004600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e60405161116d99989796959493929190612f93565b60405180910390a15193505050505b95945050505050565b60046111908261077a565b600781111561119b57fe5b146111b85760405162461bcd60e51b81526004016107aa90612e65565b600081815260036020908152604080832083548251630d48571f60e31b815292519194936112119342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b1580156108ad57600080fd5b905060005b60038301548110156113b9576113b183600301828154811061123457fe5b6000918252602090912001546004850180546001600160a01b03909216918490811061125c57fe5b906000526020600020015485600501848154811061127657fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156113045780601f106112d957610100808354040283529160200191611304565b820191906000526020600020905b8154815290600101906020018083116112e757829003601f168201915b505050505086600601858154811061131857fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156113a65780601f1061137b576101008083540402835291602001916113a6565b820191906000526020600020905b81548152906001019060200180831161138957829003601f168201915b505050505086611854565b600101611216565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610b4c90859084906130c1565b6040516104cf90612c47565b611407611b86565b5060008281526003602090815260408083206001600160a01b0385168452600c018252918290208251606081018452905460ff80821615158352610100820416151592820192909252620100009091046001600160601b0316918101919091525b92915050565b60056114798261077a565b600781111561148457fe5b146114a15760405162461bcd60e51b81526004016107aa90612e75565b6000818152600360205260408120600b8101805461ff001916610100179055905b60038201548110156115f7576000546004830180546001600160a01b0390921691630825f38f9190849081106114f457fe5b906000526020600020015484600301848154811061150e57fe5b6000918252602090912001546004860180546001600160a01b03909216918690811061153657fe5b906000526020600020015486600501868154811061155057fe5b9060005260206000200187600601878154811061156957fe5b9060005260206000200188600201546040518763ffffffff1660e01b8152600401611598959493929190612d0a565b6000604051808303818588803b1580156115b157600080fd5b505af11580156115c5573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526115ee91908101906120b7565b506001016114c2565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516116279190612d98565b60405180910390a15050565b600161163e8361077a565b600781111561164957fe5b146116665760405162461bcd60e51b81526004016107aa90612f65565b60008281526003602090815260408083206001600160a01b0387168452600c8101909252909120805460ff16156116af5760405162461bcd60e51b81526004016107aa90612e95565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe1916116e5918a91600401612c6d565b60206040518083038186803b1580156116fd57600080fd5b505afa158015611711573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061173591908101906121dc565b9050831561175e576117548360090154826001600160601b03166117fc565b600984015561177b565b61177583600a0154826001600160601b03166117fc565b600a8401555b8154600160ff199091161761ff00191661010085151502176dffffffffffffffffffffffff00001916620100006001600160601b038316021782556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c46906117ec908890889088908690612c7b565b60405180910390a1505050505050565b6000828201838110156118215760405162461bcd60e51b81526004016107aa90612ec5565b9392505050565b60008282111561184a5760405162461bcd60e51b81526004016107aa90612f75565b50900390565b4690565b6000546040516001600160a01b039091169063f2b06537906118829088908890889088908890602001612cb0565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016118b49190612d98565b60206040518083038186803b1580156118cc57600080fd5b505afa1580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611904919081019061207b565b156119215760405162461bcd60e51b81526004016107aa90612ef5565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f901906119599088908890889088908890600401612cb0565b602060405180830381600087803b15801561197357600080fd5b505af1158015611987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119ab9190810190612099565b505050505050565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611a7d579160200282015b82811115611a7d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611a48565b50611a89929150611ba6565b5090565b828054828255906000526020600020908101928215611ac8579160200282015b82811115611ac8578251825591602001919060010190611aad565b50611a89929150611bca565b828054828255906000526020600020908101928215611b21579160200282015b82811115611b215782518051611b11918491602090910190611be4565b5091602001919060010190611af4565b50611a89929150611c51565b828054828255906000526020600020908101928215611b7a579160200282015b82811115611b7a5782518051611b6a918491602090910190611be4565b5091602001919060010190611b4d565b50611a89929150611c74565b604080516060810182526000808252602082018190529181019190915290565b61045791905b80821115611a895780546001600160a01b0319168155600101611bac565b61045791905b80821115611a895760008155600101611bd0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c2557805160ff1916838001178555611ac8565b82800160010185558215611ac85791820182811115611ac8578251825591602001919060010190611aad565b61045791905b80821115611a89576000611c6b8282611c97565b50600101611c57565b61045791905b80821115611a89576000611c8e8282611c97565b50600101611c7a565b50805460018160011615610100020316600290046000825580601f10611cbd5750611cdb565b601f016020900490600052602060002090810190611cdb9190611bca565b50565b80356114688161320a565b600082601f830112611cfa57600080fd5b8135611d0d611d08826130f6565b6130cf565b91508181835260208401935060208101905083856020840282011115611d3257600080fd5b60005b83811015611d5e5781611d488882611cde565b8452506020928301929190910190600101611d35565b5050505092915050565b600082601f830112611d7957600080fd5b8135611d87611d08826130f6565b81815260209384019390925082018360005b83811015611d5e5781358601611daf8882611ebe565b8452506020928301929190910190600101611d99565b600082601f830112611dd657600080fd5b8135611de4611d08826130f6565b81815260209384019390925082018360005b83811015611d5e5781358601611e0c8882611ebe565b8452506020928301929190910190600101611df6565b600082601f830112611e3357600080fd5b8135611e41611d08826130f6565b91508181835260208401935060208101905083856020840282011115611e6657600080fd5b60005b83811015611d5e5781611e7c8882611ea8565b8452506020928301929190910190600101611e69565b80356114688161321e565b80516114688161321e565b803561146881613227565b805161146881613227565b600082601f830112611ecf57600080fd5b8135611edd611d0882613117565b91508082526020830160208301858383011115611ef957600080fd5b611f048382846131be565b50505092915050565b600082601f830112611f1e57600080fd5b8151611f2c611d0882613117565b91508082526020830160208301858383011115611f4857600080fd5b611f048382846131ca565b803561146881613230565b805161146881613239565b600060208284031215611f7b57600080fd5b6000611f878484611cde565b949350505050565b600080600080600060a08688031215611fa757600080fd5b853567ffffffffffffffff811115611fbe57600080fd5b611fca88828901611ce9565b955050602086013567ffffffffffffffff811115611fe757600080fd5b611ff388828901611e22565b945050604086013567ffffffffffffffff81111561201057600080fd5b61201c88828901611dc5565b935050606086013567ffffffffffffffff81111561203957600080fd5b61204588828901611d68565b925050608086013567ffffffffffffffff81111561206257600080fd5b61206e88828901611ebe565b9150509295509295909350565b60006020828403121561208d57600080fd5b6000611f878484611e9d565b6000602082840312156120ab57600080fd5b6000611f878484611eb3565b6000602082840312156120c957600080fd5b815167ffffffffffffffff8111156120e057600080fd5b611f8784828501611f0d565b6000602082840312156120fe57600080fd5b6000611f878484611ea8565b6000806040838503121561211d57600080fd5b60006121298585611ea8565b925050602061213a85828601611cde565b9150509250929050565b6000806040838503121561215757600080fd5b60006121638585611ea8565b925050602061213a85828601611e92565b600080600080600060a0868803121561218c57600080fd5b60006121988888611ea8565b95505060206121a988828901611e92565b94505060406121ba88828901611f53565b93505060606121cb88828901611ea8565b925050608061206e88828901611ea8565b6000602082840312156121ee57600080fd5b6000611f878484611f5e565b60006122068383612235565b505060200190565b600061182183836123d7565b600061220683836123bd565b61222f81613196565b82525050565b61222f8161315e565b600061224982613151565b6122538185613155565b935061225e8361313f565b8060005b8381101561228c57815161227688826121fa565b97506122818361313f565b925050600101612262565b509495945050505050565b60006122a282613151565b6122ac8185613155565b9350836020820285016122be8561313f565b8060005b858110156122f857848403895281516122db858261220e565b94506122e68361313f565b60209a909a01999250506001016122c2565b5091979650505050505050565b600061231082613151565b61231a8185613155565b93508360208202850161232c8561313f565b8060005b858110156122f85784840389528151612349858261220e565b94506123548361313f565b60209a909a0199925050600101612330565b600061237182613151565b61237b8185613155565b93506123868361313f565b8060005b8381101561228c57815161239e888261221a565b97506123a98361313f565b92505060010161238a565b61222f81613169565b61222f81610457565b61222f6123d282610457565b610457565b60006123e282613151565b6123ec8185613155565b93506123fc8185602086016131ca565b612405816131f6565b9093019392505050565b60008154600181166000811461242c576001811461245257612491565b607f600283041661243d8187613155565b60ff1984168152955050602085019250612491565b600282046124608187613155565b955061246b85613145565b60005b8281101561248a5781548882015260019091019060200161246e565b8701945050505b505092915050565b61222f8161319d565b61222f816131a8565b60006124b8604483613155565b7f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c206381527f616e206f6e6c79206265207175657565642069662069742069732073756363656020820152631959195960e21b604082015260600192915050565b6000612524604583613155565b7f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c81527f2063616e206f6e6c7920626520657865637574656420696620697420697320716020820152641d595d595960da1b604082015260600192915050565b6000612591600283610900565b61190160f01b815260020192915050565b60006125af602983613155565b7f476f7665726e6f72416c7068613a3a73746174653a20696e76616c69642070728152681bdc1bdcd85b081a5960ba1b602082015260400192915050565b60006125fa602d83613155565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722081526c185b1c9958591e481d9bdd1959609a1b602082015260400192915050565b6000612649605983613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b60006126ce602883613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7981526720616374696f6e7360c01b602082015260400192915050565b6000612718601183613155565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b6000612745604383610900565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b60006127b0602783610900565b7f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c20738152667570706f72742960c81b602082015260270192915050565b60006127f9604483613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c81527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6020820152630c2e8c6d60e31b604082015260600192915050565b6000612865602f83613155565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722081526e18589bdd99481d1a1c995cda1bdb19608a1b602082015260400192915050565b60006128b6604483613155565b7f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a207081527f726f706f73616c20616374696f6e20616c7265616479207175657565642061746020820152632065746160e01b604082015260600192915050565b6000612922602c83613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f81526b7669646520616374696f6e7360a01b602082015260400192915050565b6000612970602483613155565b7f6f6e6c79206865726d65732063616e2064656c69766572207468652074696d658152636c6f636b60e01b602082015260400192915050565b60006129b6603f83613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657281527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400602082015260400192915050565b6000612a15602f83613155565b7f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e81526e76616c6964207369676e617475726560881b602082015260400192915050565b6000612a66605883613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c7265616479206163746976652070726f706f73616c0000000000000000604082015260600192915050565b6000612aeb603683613155565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f742063618152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b602082015260400192915050565b6000612b43602a83613155565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e67815269081a5cc818db1bdcd95960b21b602082015260400192915050565b6000612b8f601583613155565b747375627472616374696f6e20756e646572666c6f7760581b815260200192915050565b80516060830190612bc484826123b4565b506020820151612bd760208501826123b4565b506040820151612bea6040850182612c02565b50505050565b61222f81613184565b61222f816131b3565b61222f8161318a565b6000612c1682612584565b9150612c2282856123c6565b602082019150612c3282846123c6565b5060200192915050565b600061146882612738565b6000611468826127a3565b60408101612c608285612226565b61182160208301846123bd565b60408101612c608285612235565b60808101612c898287612235565b612c9660208301866123bd565b612ca360408301856123b4565b61117c6060830184612bf9565b60a08101612cbe8288612235565b612ccb60208301876123bd565b8181036040830152612cdd81866123d7565b90508181036060830152612cf181856123d7565b9050612d0060808301846123bd565b9695505050505050565b60a08101612d188288612235565b612d2560208301876123bd565b8181036040830152612d37818661240f565b90508181036060830152612cf1818561240f565b60808082528101612d5c818761223e565b90508181036020830152612d708186612366565b90508181036040830152612d848185612305565b90508181036060830152612d008184612297565b6020810161146882846123bd565b60808101612db482876123bd565b612dc160208301866123bd565b612dce60408301856123bd565b61117c6060830184612235565b60608101612de982866123bd565b612df660208301856123bd565b611f8760408301846123b4565b60808101612e1182876123bd565b612e1e6020830186612bf0565b612e2b60408301856123bd565b61117c60608301846123bd565b602081016114688284612499565b6020810161146882846124a2565b6020808252810161182181846123d7565b60208082528101611468816124ab565b6020808252810161146881612517565b60208082528101611468816125a2565b60208082528101611468816125ed565b602080825281016114688161263c565b60208082528101611468816126c1565b602080825281016114688161270b565b60208082528101611468816127ec565b6020808252810161146881612858565b60208082528101611468816128a9565b6020808252810161146881612915565b6020808252810161146881612963565b60208082528101611468816129a9565b6020808252810161146881612a08565b6020808252810161146881612a59565b6020808252810161146881612ade565b6020808252810161146881612b36565b6020808252810161146881612b82565b606081016114688284612bb3565b6101208101612fa2828c6123bd565b612faf602083018b612226565b8181036040830152612fc1818a61223e565b90508181036060830152612fd58189612366565b90508181036080830152612fe98188612305565b905081810360a0830152612ffd8187612297565b905061300c60c08301866123bd565b61301960e08301856123bd565b81810361010083015261302c81846123d7565b9b9a5050505050505050505050565b610120810161304a828c6123bd565b613057602083018b612235565b613064604083018a6123bd565b61307160608301896123bd565b61307e60808301886123bd565b61308b60a08301876123bd565b61309860c08301866123bd565b6130a560e08301856123b4565b6130b36101008301846123b4565b9a9950505050505050505050565b60408101612c6082856123bd565b60405181810167ffffffffffffffff811182821017156130ee57600080fd5b604052919050565b600067ffffffffffffffff82111561310d57600080fd5b5060209081020190565b600067ffffffffffffffff82111561312e57600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b600061146882613178565b151590565b8061090081613200565b6001600160a01b031690565b60ff1690565b6001600160601b031690565b6000611468825b60006114688261315e565b60006114688261316e565b60006114688261318a565b82818337506000910152565b60005b838110156131e55781810151838201526020016131cd565b83811115612bea5750506000910152565b601f01601f191690565b60088110611cdb57fe5b6132138161315e565b8114611cdb57600080fd5b61321381613169565b61321381610457565b61321381613184565b6132138161318a56fea365627a7a72315820fa963045f1275b929265978b4bcbd1a19323b638e593fb960bce5f210b3907a76c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x6080604052600436106101405760003560e01c806340e58ee5116100b6578063da35c6641161006f578063da35c66414610351578063da95691a14610366578063ddf0b00914610386578063deaaa7cc146103a6578063e23a9a52146103bb578063fe0d94c1146103e857610140565b806340e58ee5146102c75780634634c61f146102e75780637bdbe4d014610307578063b58131b014610240578063bdacb3031461031c578063d33219b41461033c57610140565b806317977c611161010857806317977c611461020b57806320606b701461022b57806324bc1a6414610240578063328dd982146102555780633932abb1146102855780633e4f49e61461029a57610140565b8063013cf08b1461014557806302a251a31461018357806306fdde03146101a557806315373e3d146101c757806316f0115b146101e9575b600080fd5b34801561015157600080fd5b506101656101603660046120ec565b6103fb565b60405161017a9998979695949392919061303b565b60405180910390f35b34801561018f57600080fd5b50610198610454565b60405161017a9190612d98565b3480156101b157600080fd5b506101ba61045a565b60405161017a9190612e54565b3480156101d357600080fd5b506101e76101e2366004612144565b610493565b005b3480156101f557600080fd5b506101fe6104a2565b60405161017a9190612e38565b34801561021757600080fd5b50610198610226366004611f69565b6104b1565b34801561023757600080fd5b506101986104c3565b34801561024c57600080fd5b506101986104da565b34801561026157600080fd5b506102756102703660046120ec565b6104e6565b60405161017a9493929190612d4b565b34801561029157600080fd5b50610198610775565b3480156102a657600080fd5b506102ba6102b53660046120ec565b61077a565b60405161017a9190612e46565b3480156102d357600080fd5b506101e76102e23660046120ec565b610905565b3480156102f357600080fd5b506101e7610302366004612174565b610b59565b34801561031357600080fd5b50610198610cf6565b34801561032857600080fd5b506101e7610337366004611f69565b610cfb565b34801561034857600080fd5b506101fe610d4e565b34801561035d57600080fd5b50610198610d5d565b34801561037257600080fd5b50610198610381366004611f8f565b610d63565b34801561039257600080fd5b506101e76103a13660046120ec565b611185565b3480156103b257600080fd5b506101986113f3565b3480156103c757600080fd5b506103db6103d636600461210a565b6113ff565b60405161017a9190612f85565b6101e76103f63660046120ec565b61146e565b6003602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b60645b90565b6040518060400160405280601b81526020017f506f6f6c546f67657468657220476f7665726e6f7220416c706861000000000081525081565b61049e338383611633565b5050565b6001546001600160a01b031681565b60046020526000908152604090205481565b6040516104cf90612c3c565b604051809103902081565b670de0b6b3a764000090565b6060806060806000600360008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561056857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161054a575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156105ba57602002820191906000526020600020905b8154815260200190600101908083116105a6575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561068d5760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b5050505050815260200190600101906105e2565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561075f5760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561074b5780601f106107205761010080835404028352916020019161074b565b820191906000526020600020905b81548152906001019060200180831161072e57829003601f168201915b5050505050815260200190600101906106b4565b5050505090509450945094509450509193509193565b600090565b6000816002541015801561078e5750600082115b6107b35760405162461bcd60e51b81526004016107aa90612e85565b60405180910390fd5b6000828152600360205260409020600b81015460ff16156107d8576002915050610900565b806007015443116107ed576000915050610900565b80600801544311610802576001915050610900565b80600a01548160090154111580610823575061081c6104da565b8160090154105b15610832576003915050610900565b6002810154610845576004915050610900565b600b810154610100900460ff1615610861576007915050610900565b60028101546000546040805163281b6df760e21b815290516108ea93926001600160a01b03169163a06db7dc916004808301926020929190829003018186803b1580156108ad57600080fd5b505afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108e59190810190612099565b6117fc565b42106108fa576006915050610900565b60059150505b919050565b60006109108261077a565b9050600781600781111561092057fe5b141561093e5760405162461bcd60e51b81526004016107aa90612f55565b60008281526003602052604090206109546104da565b60018054838201546001600160a01b039182169263782d6fe1929091169061097d904390611828565b6040518363ffffffff1660e01b815260040161099a929190612c6d565b60206040518083038186803b1580156109b257600080fd5b505afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109ea91908101906121dc565b6001600160601b031610610a105760405162461bcd60e51b81526004016107aa90612ee5565b600b8101805460ff1916600117905560005b6003820154811015610b1c576000546003830180546001600160a01b039092169163591fcdfe919084908110610a5457fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610a7c57fe5b9060005260206000200154856005018581548110610a9657fe5b90600052602060002001866006018681548110610aaf57fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610ade959493929190612d0a565b600060405180830381600087803b158015610af857600080fd5b505af1158015610b0c573d6000803e3d6000fd5b505060019092019150610a229050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610b4c9190612d98565b60405180910390a1505050565b6000604051610b6790612c3c565b60408051918290038220828201909152601b82527f506f6f6c546f67657468657220476f7665726e6f7220416c70686100000000006020909201919091527fe6cce8dae3de26f4bb5e25e9bafdf3502d0ddf2acbace2e7261e1a8c96405629610bce611850565b30604051602001610be29493929190612da6565b6040516020818303038152906040528051906020012090506000604051610c0890612c47565b604051908190038120610c219189908990602001612ddb565b60405160208183030381529060405280519060200120905060008282604051602001610c4e929190612c0b565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610c8b9493929190612e03565b6020604051602081039080840390855afa158015610cad573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ce05760405162461bcd60e51b81526004016107aa90612f35565b610ceb818a8a611633565b505050505050505050565b600a90565b6005546001600160a01b03163314610d255760405162461bcd60e51b81526004016107aa90612f15565b600080546001600160a01b039092166001600160a01b0319928316179055600580549091169055565b6000546001600160a01b031681565b60025481565b6000610d6d6104da565b600180546001600160a01b03169063782d6fe1903390610d8e904390611828565b6040518363ffffffff1660e01b8152600401610dab929190612c52565b60206040518083038186803b158015610dc357600080fd5b505afa158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dfb91908101906121dc565b6001600160601b031611610e215760405162461bcd60e51b81526004016107aa90612f25565b84518651148015610e33575083518651145b8015610e40575082518651145b610e5c5760405162461bcd60e51b81526004016107aa90612ed5565b8551610e7a5760405162461bcd60e51b81526004016107aa90612f05565b610e82610cf6565b86511115610ea25760405162461bcd60e51b81526004016107aa90612eb5565b336000908152600460205260409020548015610f1f576000610ec38261077a565b90506001816007811115610ed357fe5b1415610ef15760405162461bcd60e51b81526004016107aa90612f45565b6000816007811115610eff57fe5b1415610f1d5760405162461bcd60e51b81526004016107aa90612ea5565b505b6000610f2d436108e5610775565b90506000610f3d826108e5610454565b6002805460010190559050610f506119b3565b604051806101a001604052806002548152602001336001600160a01b03168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060036000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003019080519060200190611033929190611a28565b506080820151805161104f916004840191602090910190611a8d565b5060a0820151805161106b916005840191602090910190611ad4565b5060c08201518051611087916006840191602090910190611b2d565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff02191690831515021790555090505080600001516004600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e60405161116d99989796959493929190612f93565b60405180910390a15193505050505b95945050505050565b60046111908261077a565b600781111561119b57fe5b146111b85760405162461bcd60e51b81526004016107aa90612e65565b600081815260036020908152604080832083548251630d48571f60e31b815292519194936112119342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b1580156108ad57600080fd5b905060005b60038301548110156113b9576113b183600301828154811061123457fe5b6000918252602090912001546004850180546001600160a01b03909216918490811061125c57fe5b906000526020600020015485600501848154811061127657fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156113045780601f106112d957610100808354040283529160200191611304565b820191906000526020600020905b8154815290600101906020018083116112e757829003601f168201915b505050505086600601858154811061131857fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156113a65780601f1061137b576101008083540402835291602001916113a6565b820191906000526020600020905b81548152906001019060200180831161138957829003601f168201915b505050505086611854565b600101611216565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610b4c90859084906130c1565b6040516104cf90612c47565b611407611b86565b5060008281526003602090815260408083206001600160a01b0385168452600c018252918290208251606081018452905460ff80821615158352610100820416151592820192909252620100009091046001600160601b0316918101919091525b92915050565b60056114798261077a565b600781111561148457fe5b146114a15760405162461bcd60e51b81526004016107aa90612e75565b6000818152600360205260408120600b8101805461ff001916610100179055905b60038201548110156115f7576000546004830180546001600160a01b0390921691630825f38f9190849081106114f457fe5b906000526020600020015484600301848154811061150e57fe5b6000918252602090912001546004860180546001600160a01b03909216918690811061153657fe5b906000526020600020015486600501868154811061155057fe5b9060005260206000200187600601878154811061156957fe5b9060005260206000200188600201546040518763ffffffff1660e01b8152600401611598959493929190612d0a565b6000604051808303818588803b1580156115b157600080fd5b505af11580156115c5573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526115ee91908101906120b7565b506001016114c2565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516116279190612d98565b60405180910390a15050565b600161163e8361077a565b600781111561164957fe5b146116665760405162461bcd60e51b81526004016107aa90612f65565b60008281526003602090815260408083206001600160a01b0387168452600c8101909252909120805460ff16156116af5760405162461bcd60e51b81526004016107aa90612e95565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe1916116e5918a91600401612c6d565b60206040518083038186803b1580156116fd57600080fd5b505afa158015611711573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061173591908101906121dc565b9050831561175e576117548360090154826001600160601b03166117fc565b600984015561177b565b61177583600a0154826001600160601b03166117fc565b600a8401555b8154600160ff199091161761ff00191661010085151502176dffffffffffffffffffffffff00001916620100006001600160601b038316021782556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c46906117ec908890889088908690612c7b565b60405180910390a1505050505050565b6000828201838110156118215760405162461bcd60e51b81526004016107aa90612ec5565b9392505050565b60008282111561184a5760405162461bcd60e51b81526004016107aa90612f75565b50900390565b4690565b6000546040516001600160a01b039091169063f2b06537906118829088908890889088908890602001612cb0565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016118b49190612d98565b60206040518083038186803b1580156118cc57600080fd5b505afa1580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611904919081019061207b565b156119215760405162461bcd60e51b81526004016107aa90612ef5565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f901906119599088908890889088908890600401612cb0565b602060405180830381600087803b15801561197357600080fd5b505af1158015611987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119ab9190810190612099565b505050505050565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611a7d579160200282015b82811115611a7d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611a48565b50611a89929150611ba6565b5090565b828054828255906000526020600020908101928215611ac8579160200282015b82811115611ac8578251825591602001919060010190611aad565b50611a89929150611bca565b828054828255906000526020600020908101928215611b21579160200282015b82811115611b215782518051611b11918491602090910190611be4565b5091602001919060010190611af4565b50611a89929150611c51565b828054828255906000526020600020908101928215611b7a579160200282015b82811115611b7a5782518051611b6a918491602090910190611be4565b5091602001919060010190611b4d565b50611a89929150611c74565b604080516060810182526000808252602082018190529181019190915290565b61045791905b80821115611a895780546001600160a01b0319168155600101611bac565b61045791905b80821115611a895760008155600101611bd0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c2557805160ff1916838001178555611ac8565b82800160010185558215611ac85791820182811115611ac8578251825591602001919060010190611aad565b61045791905b80821115611a89576000611c6b8282611c97565b50600101611c57565b61045791905b80821115611a89576000611c8e8282611c97565b50600101611c7a565b50805460018160011615610100020316600290046000825580601f10611cbd5750611cdb565b601f016020900490600052602060002090810190611cdb9190611bca565b50565b80356114688161320a565b600082601f830112611cfa57600080fd5b8135611d0d611d08826130f6565b6130cf565b91508181835260208401935060208101905083856020840282011115611d3257600080fd5b60005b83811015611d5e5781611d488882611cde565b8452506020928301929190910190600101611d35565b5050505092915050565b600082601f830112611d7957600080fd5b8135611d87611d08826130f6565b81815260209384019390925082018360005b83811015611d5e5781358601611daf8882611ebe565b8452506020928301929190910190600101611d99565b600082601f830112611dd657600080fd5b8135611de4611d08826130f6565b81815260209384019390925082018360005b83811015611d5e5781358601611e0c8882611ebe565b8452506020928301929190910190600101611df6565b600082601f830112611e3357600080fd5b8135611e41611d08826130f6565b91508181835260208401935060208101905083856020840282011115611e6657600080fd5b60005b83811015611d5e5781611e7c8882611ea8565b8452506020928301929190910190600101611e69565b80356114688161321e565b80516114688161321e565b803561146881613227565b805161146881613227565b600082601f830112611ecf57600080fd5b8135611edd611d0882613117565b91508082526020830160208301858383011115611ef957600080fd5b611f048382846131be565b50505092915050565b600082601f830112611f1e57600080fd5b8151611f2c611d0882613117565b91508082526020830160208301858383011115611f4857600080fd5b611f048382846131ca565b803561146881613230565b805161146881613239565b600060208284031215611f7b57600080fd5b6000611f878484611cde565b949350505050565b600080600080600060a08688031215611fa757600080fd5b853567ffffffffffffffff811115611fbe57600080fd5b611fca88828901611ce9565b955050602086013567ffffffffffffffff811115611fe757600080fd5b611ff388828901611e22565b945050604086013567ffffffffffffffff81111561201057600080fd5b61201c88828901611dc5565b935050606086013567ffffffffffffffff81111561203957600080fd5b61204588828901611d68565b925050608086013567ffffffffffffffff81111561206257600080fd5b61206e88828901611ebe565b9150509295509295909350565b60006020828403121561208d57600080fd5b6000611f878484611e9d565b6000602082840312156120ab57600080fd5b6000611f878484611eb3565b6000602082840312156120c957600080fd5b815167ffffffffffffffff8111156120e057600080fd5b611f8784828501611f0d565b6000602082840312156120fe57600080fd5b6000611f878484611ea8565b6000806040838503121561211d57600080fd5b60006121298585611ea8565b925050602061213a85828601611cde565b9150509250929050565b6000806040838503121561215757600080fd5b60006121638585611ea8565b925050602061213a85828601611e92565b600080600080600060a0868803121561218c57600080fd5b60006121988888611ea8565b95505060206121a988828901611e92565b94505060406121ba88828901611f53565b93505060606121cb88828901611ea8565b925050608061206e88828901611ea8565b6000602082840312156121ee57600080fd5b6000611f878484611f5e565b60006122068383612235565b505060200190565b600061182183836123d7565b600061220683836123bd565b61222f81613196565b82525050565b61222f8161315e565b600061224982613151565b6122538185613155565b935061225e8361313f565b8060005b8381101561228c57815161227688826121fa565b97506122818361313f565b925050600101612262565b509495945050505050565b60006122a282613151565b6122ac8185613155565b9350836020820285016122be8561313f565b8060005b858110156122f857848403895281516122db858261220e565b94506122e68361313f565b60209a909a01999250506001016122c2565b5091979650505050505050565b600061231082613151565b61231a8185613155565b93508360208202850161232c8561313f565b8060005b858110156122f85784840389528151612349858261220e565b94506123548361313f565b60209a909a0199925050600101612330565b600061237182613151565b61237b8185613155565b93506123868361313f565b8060005b8381101561228c57815161239e888261221a565b97506123a98361313f565b92505060010161238a565b61222f81613169565b61222f81610457565b61222f6123d282610457565b610457565b60006123e282613151565b6123ec8185613155565b93506123fc8185602086016131ca565b612405816131f6565b9093019392505050565b60008154600181166000811461242c576001811461245257612491565b607f600283041661243d8187613155565b60ff1984168152955050602085019250612491565b600282046124608187613155565b955061246b85613145565b60005b8281101561248a5781548882015260019091019060200161246e565b8701945050505b505092915050565b61222f8161319d565b61222f816131a8565b60006124b8604483613155565b7f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c206381527f616e206f6e6c79206265207175657565642069662069742069732073756363656020820152631959195960e21b604082015260600192915050565b6000612524604583613155565b7f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c81527f2063616e206f6e6c7920626520657865637574656420696620697420697320716020820152641d595d595960da1b604082015260600192915050565b6000612591600283610900565b61190160f01b815260020192915050565b60006125af602983613155565b7f476f7665726e6f72416c7068613a3a73746174653a20696e76616c69642070728152681bdc1bdcd85b081a5960ba1b602082015260400192915050565b60006125fa602d83613155565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722081526c185b1c9958591e481d9bdd1959609a1b602082015260400192915050565b6000612649605983613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b60006126ce602883613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7981526720616374696f6e7360c01b602082015260400192915050565b6000612718601183613155565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b6000612745604383610900565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b60006127b0602783610900565b7f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c20738152667570706f72742960c81b602082015260270192915050565b60006127f9604483613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c81527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6020820152630c2e8c6d60e31b604082015260600192915050565b6000612865602f83613155565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722081526e18589bdd99481d1a1c995cda1bdb19608a1b602082015260400192915050565b60006128b6604483613155565b7f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a207081527f726f706f73616c20616374696f6e20616c7265616479207175657565642061746020820152632065746160e01b604082015260600192915050565b6000612922602c83613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f81526b7669646520616374696f6e7360a01b602082015260400192915050565b6000612970602483613155565b7f6f6e6c79206865726d65732063616e2064656c69766572207468652074696d658152636c6f636b60e01b602082015260400192915050565b60006129b6603f83613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657281527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400602082015260400192915050565b6000612a15602f83613155565b7f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e81526e76616c6964207369676e617475726560881b602082015260400192915050565b6000612a66605883613155565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c7265616479206163746976652070726f706f73616c0000000000000000604082015260600192915050565b6000612aeb603683613155565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f742063618152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b602082015260400192915050565b6000612b43602a83613155565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e67815269081a5cc818db1bdcd95960b21b602082015260400192915050565b6000612b8f601583613155565b747375627472616374696f6e20756e646572666c6f7760581b815260200192915050565b80516060830190612bc484826123b4565b506020820151612bd760208501826123b4565b506040820151612bea6040850182612c02565b50505050565b61222f81613184565b61222f816131b3565b61222f8161318a565b6000612c1682612584565b9150612c2282856123c6565b602082019150612c3282846123c6565b5060200192915050565b600061146882612738565b6000611468826127a3565b60408101612c608285612226565b61182160208301846123bd565b60408101612c608285612235565b60808101612c898287612235565b612c9660208301866123bd565b612ca360408301856123b4565b61117c6060830184612bf9565b60a08101612cbe8288612235565b612ccb60208301876123bd565b8181036040830152612cdd81866123d7565b90508181036060830152612cf181856123d7565b9050612d0060808301846123bd565b9695505050505050565b60a08101612d188288612235565b612d2560208301876123bd565b8181036040830152612d37818661240f565b90508181036060830152612cf1818561240f565b60808082528101612d5c818761223e565b90508181036020830152612d708186612366565b90508181036040830152612d848185612305565b90508181036060830152612d008184612297565b6020810161146882846123bd565b60808101612db482876123bd565b612dc160208301866123bd565b612dce60408301856123bd565b61117c6060830184612235565b60608101612de982866123bd565b612df660208301856123bd565b611f8760408301846123b4565b60808101612e1182876123bd565b612e1e6020830186612bf0565b612e2b60408301856123bd565b61117c60608301846123bd565b602081016114688284612499565b6020810161146882846124a2565b6020808252810161182181846123d7565b60208082528101611468816124ab565b6020808252810161146881612517565b60208082528101611468816125a2565b60208082528101611468816125ed565b602080825281016114688161263c565b60208082528101611468816126c1565b602080825281016114688161270b565b60208082528101611468816127ec565b6020808252810161146881612858565b60208082528101611468816128a9565b6020808252810161146881612915565b6020808252810161146881612963565b60208082528101611468816129a9565b6020808252810161146881612a08565b6020808252810161146881612a59565b6020808252810161146881612ade565b6020808252810161146881612b36565b6020808252810161146881612b82565b606081016114688284612bb3565b6101208101612fa2828c6123bd565b612faf602083018b612226565b8181036040830152612fc1818a61223e565b90508181036060830152612fd58189612366565b90508181036080830152612fe98188612305565b905081810360a0830152612ffd8187612297565b905061300c60c08301866123bd565b61301960e08301856123bd565b81810361010083015261302c81846123d7565b9b9a5050505050505050505050565b610120810161304a828c6123bd565b613057602083018b612235565b613064604083018a6123bd565b61307160608301896123bd565b61307e60808301886123bd565b61308b60a08301876123bd565b61309860c08301866123bd565b6130a560e08301856123b4565b6130b36101008301846123b4565b9a9950505050505050505050565b60408101612c6082856123bd565b60405181810167ffffffffffffffff811182821017156130ee57600080fd5b604052919050565b600067ffffffffffffffff82111561310d57600080fd5b5060209081020190565b600067ffffffffffffffff82111561312e57600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b600061146882613178565b151590565b8061090081613200565b6001600160a01b031690565b60ff1690565b6001600160601b031690565b6000611468825b60006114688261315e565b60006114688261316e565b60006114688261318a565b82818337506000910152565b60005b838110156131e55781810151838201526020016131cd565b83811115612bea5750506000910152565b601f01601f191690565b60088110611cdb57fe5b6132138161315e565b8114611cdb57600080fd5b61321381613169565b61321381610457565b61321381613184565b6132138161318a56fea365627a7a72315820fa963045f1275b929265978b4bcbd1a19323b638e593fb960bce5f210b3907a76c6578706572696d656e74616cf564736f6c63430005100040",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    }
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 47,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "timelock",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(TimelockInterface)1149"
      },
      {
        "astId": 49,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "pool",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(GovernanceTokenInterface)1159"
      },
      {
        "astId": 51,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "proposalCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 106,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "proposals",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Proposal)86_storage)"
      },
      {
        "astId": 110,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 170,
        "contract": "contracts/test/GovernorZero.sol:GovernorZero",
        "label": "hermes",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(GovernanceTokenInterface)1159": {
        "encoding": "inplace",
        "label": "contract GovernanceTokenInterface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)1149": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)93_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorAlpha.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)93_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)86_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorAlpha.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)86_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)86_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Proposal",
        "members": [
          {
            "astId": 53,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 55,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 57,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 60,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 63,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 66,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 69,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 71,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 73,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 77,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 79,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "canceled",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 81,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "executed",
            "offset": 1,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 85,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "receipts",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(Receipt)93_storage)"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(Receipt)93_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Receipt",
        "members": [
          {
            "astId": 88,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 90,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 92,
            "contract": "contracts/test/GovernorZero.sol:GovernorZero",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}